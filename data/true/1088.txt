it is expected that the next generation of smart card will be more intelligent  more interactive and more interoperable. we call these the 1i requirements. a smart card wallet system for meeting these 1i requirements is presented. a novel objectoriented framework is proposed  such that everything is stored in the smart card wallet as an object and the extensible markup language  xml  is employed for storing data and facilitating information exchange. five types of objects are proposed to cater for different requirements. in particular  users can store an agent in a smart card wallet for retrieving the original object over the internet. this helps to overcome the memory limitations of smart cards. we also present an application called javacard-based online-ticket booking system  jobs  for purchasing tickets  e.g.  film tickets  over the internet. a simplified prototype has been built to demonstrate its basic functions.
keywords
smart card  java card  e-commerce  e-wallet  e-payment
1. introduction
looking like a portable microcomputer  a smart card is a plastic card embedded with a microprocessor chip  1 . emulating the physical wallets  the focus of this paper is to use smart cards as wallets for storing different types of items. people can store digital certificates  electronic cash  etc. in a smart card wallet and carry it to conduct electronic transactions anywhere in a secure and efficient manner through the web. integrated with the smart card wallet  the web becomes an even more effective tool to support business-to-consumer e-commerce. however  current smart cards have two major limitations. first  the memory of a smart card is very limited. second  smart cards produced by different manufacturers are generally not interoperable. in this paper  we propose a novel framework of a smart card wallet to address these two issues. to extend the memory of a smart card  we propose that for some objects  an agent of the original object is stored inside a smart card whereas the actual object is stored somewhere on the internet. whenever the actual object is required  the agent retrieves the object over the internet for the user.   to develop an inter-operable smart card wallet  we propose an object-oriented framework  and the java card  is used to realize this framework.
1. next generation smart card wallet
while current smart cards are  smart   future smart cards will be even  smarter . we think that future smart cards will be more  intelligent   e.g. multi-functional    interactive   e.g. able to interact with different devices on the internet  and  interoperable   e.g. written once  run many cards . we call these the 1i requirements. to satisfy the 1i requirements  we propose to use an object-oriented framework such that everything is stored inside a smart card as an object. fig. 1 shows that objects stored inside a smart card wallet can be classified into three categories  namely transferable objects  non-transferable objects and agents. transferable objects are objects that can be transferred out of the smart card wallet. these objects can be further divided into duplicable objects and non-duplicable objects. duplicable objects can be duplicated or copied. for transferable and non-duplicable objects  they are totally removed from the original smart card wallet after being transferred to another smart card wallet.

figure 1: classification of objects inside a smart card wallet
in contrast to transferable objects are non-transferable objects. as the name implies  these objects cannot be transferred to another smart card wallet. non-transferable objects can be further divided into public objects and private objects. the third type of object is called an agent. for instance  due to memory constraints  it is impossible to store a large image file in a smart card wallet. however an agent can be stored in the smart card wallet for retrieving the image file over the internet. this not only overcomes the memory constraint of a smart card wallet but also opens many new applications/services.
each object has three basic components  namely header  content and methods. the object header and object content are expressed using the xml.   the object content is the actual data stored in the object. finally  the methods allow users/other smart card wallets to operate on the object content. objects stored inside a smart card wallet are managed by an object manager  om . the om itself is a non-transferable and private object inside a smart card wallet. it functions as the interface for accessing the objects stored inside the smart card wallet.
1. overview of the javacard-based onlineticket booking system  jobs 
in this section  we apply the smart card wallet to design an application called jobs for purchasing film tickets online and download them to a smart card wallet. at the cinema entrance  the film ticket is retrieved for gaining access to see the film. the protocol operation is divided into three phases:
authentication/registration phase  ticket purchasing phase and ticket retrieval phase. for the first phase  the user first enters his/her password. notice that the password verification is performed at the client's side by matching the data stored in the smart card wallet. upon successful verification  the user and the cinema exchange their x.1 certificates and hence the public keys for authentication purpose. after the authentication/registration process  the cinema starts the ticket purchase process by sending the film details to the user. the film details are signed by the cinema's private key to ensure content integrity. the user then selects the film details and sends the  ticketpurchase  message to the cinema. upon receiving and verifying the message  the cinema sends a digitally signed acknowledgement to the user and the user returns a digitally signed confirmation to the cinema. then the cinema delivers the digitally signed ticket to the customer using the digital envelope method used in set . after verifying the digital signature on the ticket  the smart card wallet stores the ticket. alternatively  the smart card wallet can store the ticket using the agent approach. after receiving the ticket  the customer sends a digitally signed payment instruction to the cinema using the digital envelope method. the payment instruction can be used to initiate a credit card payment. alternatively  the smart card wallet may pay for the ticket using a micropayment method such as millicent . in this case  the electronic token is sent to the cinema using the digital envelope method. finally  the cinema issues a signed receipt to the customer. at the cinema entrance  the customer inserts the smart card wallet into the card reader and the ticket would be presented for the user to gain access to see the film.
1. prototype system: i-cinema
to demonstrate the basic function of jobs  a simplified prototype called i-cinema has been built.

figure 1: main page of i-cinema
the main page of i-cinema is shown in fig. 1. to enter the system  a user needs to enter his/her password.  user authentication is performed at the client side. therefore unlike the server-side username/password verification systems  preregistration with the server-side is not necessary. for a new visitor  the user will be asked whether he/she wants to register with the i-cinema. if so  the registration process will be done automatically by transferring data to the server's database. after successful login to the i-cinema system  the customer will be forwarded to the ticket purchase screen. here  he/she can input the film details and then submit the request to the cinema by pressing the button. the cinema then transfers the film ticket to the smart card wallet. for the ticket retrieval process at the cinema entrance  the user inserts his/her smart card wallet into the smart card reader and the system will retrieve the ticket and verify its content against the cinema's database. finally  the ticket will be deleted from the smart card wallet.
jobs can also be deployed to facilitate e-retailing in general. with e-commerce  a pull model is now possible in which consumers can pull the goods down a demand chain with the assistance of an electronic broker  e-broker  . through the web  the consumer can explore the goods of different suppliers and place orders accordingly. for each order  the corresponding ticket is downloaded into his/her smart card wallet. the ebroker then notifies the orders to the respective suppliers and the suppliers transport the goods to the respective local distributors. at a local distributor  the consumer inserts his/her smart card wallet into the card reader and obtains the goods based on the tickets stored inside the smart card wallet.
1. conclusion
we have presented the basic framework of an object-oriented smart card wallet. five types of objects are proposed and xml is employed to store data and facilitate information exchange. in particular  a user can store an agent inside a smart card wallet for retrieving the original object over the internet. integrated with the smart card wallets  the web becomes an even more effective tool to support b1c e-commerce. an application called jobs is presented to illustrate how the smart card wallet can be used to purchase and download tickets over the internet. jobs can also be deployed to facilitate e-retailing in general in which a consumer can play an active role in pulling goods down a demand chain.
1. acknowledgments
this project is supported by an innovation technology fund/teaching company scheme of the government of the hong kong special administrative region under account number uit/1 and by macroview telecom.
