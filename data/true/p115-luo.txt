with the increasing amount of text data stored in relational databases  there is a demand for rdbms to support keyword queries over text data. as a search result is often assembled from multiple relational tables  traditional ir-style ranking and query evaluation methods cannot be applied directly.
모in this paper  we study the effectiveness and the efficiency issues of answering top-k keyword query in relational database systems. we propose a new ranking formula by adapting existing ir techniques based on a natural notion of virtual document. compared with previous approaches  our new ranking method is simple yet effective  and agrees with human perceptions. we also study efficient query processing methods for the new ranking method  and propose algorithms that have minimal accesses to the database. we have conducted extensive experiments on large-scale real databases using two popular rdbmss. the experimental results demonstrate significant improvement to the alternative approaches in terms of retrieval effectiveness and efficiency.
categories and subject descriptors
h.1  database management : query processing; h.1  information storage and retrieval : information search and retrieval
general terms
algorithms  experimentaion  performance
keywords
top-k  keyword search  relational database  information retrieval
1. introduction
모integration of db and ir technologies has been an active research topic recently . one fundamental driving force is the fact that more and more text data are now stored

 this work was supported by arc grant dp1 and unsw goldstar grant.
permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. to copy otherwise  to republish  to post on servers or to redistribute to lists  requires prior specific permission and/or a fee.
sigmod'1  june 1  1  beijing  china.
copyright 1 acm 1-1-1/1 ...$1.
in relational databases. examples include commercial applications such as customer relation management systems  crm   and personal or social applications such as web blogs and wiki sites. since the dominant form of querying free text is through keyword search  there is a natural demand for relational databases to support effective and efficient ir-style keyword queries.
모in this paper  we focus on the problem of supporting effective and efficient top-k keyword search in relational databases. while many rdbmss support full-text search  they only allow retrieving relevant tuples from within the same relation. a unique feature of keyword search over rdbmss is that search results are often assembled from relevant tuples in several relations such that they are inter-connected and collectively be relevant to the keyword query  1  1 . supporting such feature has a number of advantages. firstly  data may have to be split and stored in different relations due to database normalization requirement. such data will not be returned if keyword search is limited to only single relations. secondly  it lowers the barrier for casual users to search databases  as it does not require users to have knowledge about query languages and database schema. thirdly  it helps to reveal interesting or unexpected relationships among entities . lastly  for websites with database back-ends  it provides a more flexible search method than the existing solution that uses a fixed set of pre-built template queries. for example  we issued a search of  1 hanks  using the search interface on imdb.com  and failed to find relevant answers  figure 1 . in contrast  the same search on our system
 on a database populated with imdb.com's data  will return results shown in table 1  where relevant tuples from multiple relations  marked in bold font  are joined together to form a meaningful answer to the query.

figure 1: searching  1 hanks  on imdb.com
모there has been many related work dedicated to keyword search in databases recently  1  1  1  1  1  1  1  1  1 . among them   first incorporates state-of-the-art ir ranking formula to address the retrieval effectiveness issue. it also presents several efficient query execution algorithms optimized for returning top-k relevant answers. the ranking formula is subsequently improved by liu  et al.  by using several refined weighting schemes. banks  and banks1  took another approach by modelling the
table 1: top-1 search results on our system

1 movies:  primetime glick   1  tom hanks/ben stiller
	:::	:::::
 #1 
1 movies:  primetime glick   1  tom hanks/ben stiller
	:::	:::::
 #1  뫹 actorplay: character = himself 뫸 actors: hanks  tom
: john hanks 뫹 actorplay: character = alexander
:::::
kerst 뫸 movies: rosamunde pilcher - wind u몮ber dem fluss
 1  :::

database content as a graph and proposed sophisticated ranking and query execution algorithms. recently   1  1  studied theoretical aspects of efficient query processing for top-k keyword queries.
모despite the previous studies  there are still several issues with existing ranking methods  some of which may even lead to search results contradictory to human perception. in this paper  we analyze shortcomings of previous approaches and propose a new ranking method by adapting existing ir ranking methods and principles to our problem based on a virtual document model. our ranking method also takes into consideration other factors  e.g.  completeness and size of a result . another feature is the use of a single tuning parameter to inject and or or semantics into the ranking formula. the technical challenge with the new ranking method is that the final score of an answer is aggregated from multiple scores of each constituent tuples  yet the final score is not monotonic with respect to any of its sub-components. existing work on top-k query optimization cannot be immediately applied as they all rely on the monotonicity of the rank aggregation function. therefore  we also study efficient query processing methods optimized for our non-monotonic ranking function. we propose a skyline sweeping algorithm that achieves minimal database probing by using a monotonic score upper bounding function for our ranking formula. we also explore the idea of employing another non-monotonic upper bounding function to further reduce unnecessary database accesses  which results in the block pipeline algorithm. we have conducted extensive experiments on large-scale real databases on two popular rdbmss. the experimental results demonstrate that our proposed approach is superior to the previous methods in terms of effectiveness and efficiency.
we summarize our contributions as:
  we propose a novel and nontrivial ranking method that adapts the state-of-the-art ir ranking methods to ranking heterogeneous joined results of database tuples. the new method addresses an important deficiency in the previous methods and results in substantial improvement of the quality of search results.
  we propose two algorithms  skyline sweeping and block pipeline  to provide efficient query processing mechanism based on our new ranking method. the key challenge is that the non-monotonic nature of our ranking function renders existing top-k query processing techniques inapplicable. our new algorithms are based on several novel score upper bounding functions. they also have the desirable feature of interacting minimally with the databases.
  we conduct comprehensive experiments on large-scale real databases containing up to ten million tuples. our experiment results demonstrated that the new ranking method outperformed alternative approaches  and that our query processing algorithms delivered superior performance to previous ones.
모similar to previous work  1  1  1   our system is designed to work on top of a relational dbms that supports full-text query and inverted indexes. our current implementation supports both oracle and mysql. the rationale for choosing this architecture over other alternatives  such as graphbased method  1  1  1   is that  a  relational databases are widely used in enterprises and over the internet  and a sizeable percentage of information stored inside rdbmss is text;  b  it is easier to exploit many features offered by rdbmss  e.g.  data storage and recovery  index building and maintenance  and sophisticated query processing and optimization capabilities. nonetheless  we believe our research into the rdbms-based approach is complementary to alternative approaches.
모the rest of the paper is organized as follows: section 1 provides an overview of the problem and existing solutions. section 1 presents our new ranking method and section 1 introduces two query processing algorithms optimized for efficient top-k retrieval. experimental results are reported in section 1. we introduce related work in section 1 and section 1 concludes the paper. a full version of the paper can be found in .
1. preliminaries
1 problem overview and problem definition
