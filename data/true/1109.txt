we present in this paper our experience in providing a wireless access interface to a distributed content search and delivery system. important wireless application protocol wap  gateway functions  in particular the push function  are integrated into the access points of the system. wireless devices can use this interface to search for distributed information and get notified of relevant new content. a prototype implementation of the integration has been completed which works successfully with wap 1 compliant clients.
keywords
wap gateway  push  kannel  answer system  content routing
1. introduction
the wireless access protocol  wap  is a suite of protocol solutions for providing web content to wireless devices. it enables wireless devices with small screen sizes and slow  lossy communication channels to access web content in a more efficient and natural way. in this paper  we describe our experience in integrating the wap framework into the answer information system. answer is a distributed content search and distribution system which provides an infrastructure directly connecting information providers and consumers. a symmetrical interaction model allows users to directly search for results or get notified by the system through content distribution based on prior interest indication. the core of the system serves as a distributed information base and search engine which can be built upon either an active network or an overlay application layer network. on the edge  access points  of the system  a consistent interface is provided for both content provision and search result delivery through the use of xml. for search users  both web access and wap access are provided for submission of queries as well as display of search results and new content alerts. in order to allow for wireless access  wap gateway functions are introduced into the answer system. in particular  the push feature of wap is used as a natural means to distribute new content to interested clients. we discuss in the rest of the paper how we build the most essential gateway functions into the answer system and show through examples how wireless devices interact with the system through the wap interface.
1. answer: core and edge
due to space constraint  we shall only give a very brief overview of the answer architecture. interested readers can refer to  for a detailed description of the system. in essence  answer is an information routing system where its core infrastructure serves as a distributed directory base to route query and content packets. unlike in the case of conventional layer 1 e.g. ip  routing  these packets do not have to specify explicit destination addresses. the underlying network automatically directs packets based on the search or distribution criteria contained in the packets. this is achieved through the following key system components:   an ontology based hierarchical semantic structure for content management.   a dynamically constructed routing tree for directory information distribution.
  content routing modules at each answer node for directory management and packet forwarding.   intelligent agents in the packets for customized application routing.
on the edge of the system  xml is used as a uniform interface for content specification. through the use of dtds and xsl files  content data with application specific syntax and semantics are converted into directory indices for distribution. these indices are eventually propagated into the answer core through periodic routing information exchange among the answer nodes. for the end users  answer edge nodes provide interfaces for both web browsers and wap enabled wireless devices. these interface modules are implemented as java servlets. user queries are transformed into answer format through javascript or wmlscript. they are then injected into the answer system and aggregated into query indices for distribution into the answer core. these indices serve as indication of user interests which are used to direct content packets. search results  when routed to the edge nodes  are converted into html or wml format using application specific xsl files.
1. wireless access to answer
in order to support wireless access to the answer system  we extended the answer edge nodes with functions which enable a smooth and efficient wap interface. these include:   identification of wireless devices
  integration of wap gateway functions
  conversion and organization of search results
  delivery of new content through wap push
while the first function involves nothing more than checking the related http headers about the wap agents  the other functions are worth some extra explanations.
1 wap gateway integration
since the answer edge nodes have a web interface  it is possible to use an arbitrary wap gateway to access the answer system. however  given the simple functions that wireless devices perform to interact with the answer system  it is unnecessary to have a full featured wap gateway. further  directly integrating some of the wap gateway functions into the answer edge nodes makes the wireless accesses more efficient  as search requests and content deliveries do not have to go through some centralized gateways which could become system bottlenecks. as an example to these arguments  consider the wap push feature and its use in the answer system which we will elaborate in a later section. it is the most important feature for our system since it serves as a means to deliver new content to interested users. however  if we rely on a push gateway to notify users each time there is new result available at an edge node  the gateway will be flooded with pap  push access protocol  requests. if instead we build the push gateway function in the edge nodes  not only can the bottleneck problem be alleviated  but the pap protocol can be eliminated all together. this is because each edge node is the only source of push requests for its gateway and thus there is no longer the need for external protocol interactions. for our purpose  we used the open source kannel wap gateway package as the reference. since kannel was implemented in c and did not support the push function  our integration effort involved both re-implementing features in java and building the gateway functions.
1 search result conversion
as we mentioned earlier  the query results from the answer system are coded in xml format for easy conversion into different display languages using xsl. for wap devices  results are converted into wml cards where each result item corresponds naturally to a single card. given the distributed nature of the answer system  the results of a search are delivered to the user progressively as content summaries from different parts of the system become available. with the help of the edge nodes  the whole result sets can be displayed properly by the wireless devices. the edge node groups the results as they become available. based on certain threshold e.g. time passed or number of results available   it delivers the initial set of results as a deck of cards to the wireless device. the last card in the deck would ask the user whether he/she wants to see more results. more new decks from the edge node will then be fetched if the user decides to continue. otherwise  the temporary storage of the result set is erased from the edge node.
1 new content delivery
one of the distinctive features of the answer system is the symmetrical interaction model between content providers and consumers. that is  not only can query packets be routed to the proper content destinations  but content packets can be delivered to users who expressed their interests before. new content notification is thus an integral part of the wireless access. from wap 1 and higher  a push function is specified. it allows a user to send information asynchronously to a wap enabled device. to do so  the user sends a request containing the id of the intended device to a push gateway. the gateway then locate the device and deliver the message. with this push feature  we can very smoothly deliver new content notifications to wap users. as a very important part of our wap integration  we have implemented the push gateway functions in the answer edge nodes. when a wap device submits an answer query to an edge node  its device id together with the query id are stored at the node. when new results are available at a later stage after certain time threshold   if the query has not been canceled by the user  the results are converted into a wml deck  a push message containing a link to the deck is then sent to the device. such a message will be either delivered as an alert or put in the user's mail box.
1 examples
one of the applications we developed on the answer framework is the conference announcement and search application. conference organizers can announce the conferences using a special xml format. a user can search for specific conferences through a web browser or a wap device based on different criteria. for wap devices  search results will be returned as a deck of cards with each card representing one conference. users may also be notified of relevant new announcements through alert messages on the wap devices. figure 1 shows the screen shots of a wap phone when new result becomes available and the user chooses to view the result. since we are not aware of any push capable wap phones  the wap phone in this example is a simulator in the nokia wap toolkit.

	 a 	 b 
figure 1: new result display
1. status and future work
we have finished integrating the basic wap gateway functions into the answer system. a prototype system which uses the answer framework has been tested with both wap phones and wap simulation softwares. we are investigating various aspects of mobility management for wireless access in the answer system. in particular  we plan to integrate support in the answer system so that 1  mobile devices can locate the  nearest  edge nodes  and 1  user sessions can remain uninterrupted  e.g. search results can still be properly delivered even when the user moves or temporarily disconnects from the answer system.
