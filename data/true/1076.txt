information agents are computational software systems that provides transparent access to many different information sources in the internet  and to be able to retrieve  analyze  manipulate  and integrate heterogeneous data and information on demand. mobile agents are an effective choice for many applications to improve latency and bandwidth of client-server applications and to reduce vulnerability to network disconnection. in this paper  we propose milog  a logic-based mobile agent framework for constructing intelligent information agents. in the framework  inference and planning process of an agent is written in a compact logic program. a new generation logic program execution engine provides strong migration capability with reasonable execution speed. the framework has been used to develop a web-based decision support system 'biddingbot'.
keywords
information agents  mobile agents  logic programming
1. introduction
information agents have been investigated very actively. information agents are computational software systems that provides transparent access to many different information sources in the internet  and to be able to retrieve  analyze  manipulate  and integrate heterogeneous data and information on demand. mobile agents are an effective choice for many applications to improve latency and bandwidth of client-server applications and to reduce vulnerability to network disconnection. however  it needs more expressive power of its programming language to realize complex behaviors of the agents. in this paper  we propose milog  a logic-based mobile agent framework for constructing intelligent information agents. in the framework  inference and planning process of an agent is written in a compact logic program. the framework contains a new generation logic program execution engine which provides a strong migration capability with reasonable execution speed. the framework helps developers to construct more responsible and flexible information gathering systems.
the rest of this paper is organized as follows: in section 1 we presents the architecture of mobile agents on the milog framework. in section 1 we discuss the features of the milog by presenting a real world application which supports online auctions on the internet. section 1 summarizes this paper  and show some possible directions for future researches.
1. mobility

figure 1: the implementation model of the mobile agents.
figure 1 shows the architecture for implementing mobile agents. each computer has one meta agent which is a transmitter. a mobile agent migrates from computer 'a' to computer 'b' as following steps :
 step 1  the mobile agent agentmobile requests the meta agent metaa on the computer 'a' to migrate to the computer 'b'. the agent metaa interrupts the execution of the mobile agent agentmobile.
 step 1  the meta agent metaa captures the state of the mobile agent agentmobile by using special builtin predicates for controlling other agents.
 step 1  the meta agent metaa negotiates with the meta agent metab on the computer 'b'. if the negotiation is successful  the mobile agent agentmobile is transported to the meta agent metab on the computer 'b' by using a transport method  e.g. http or smtp . if the negotiation or the transportation fails  the mobile agent agentmobile is resumed its execution on the computer 'a'.
 step 1  the meta agent metab on the computer 'b' receives the mobile agent agentmobile  checks the agent program  and then resumes the mobile agent agentmobile on the computer 'b'. the mobile agent agentmobile continues its execution on the computer
'b'.
figure 1 shows a sample code of a simple meta agent. on the step1  the mobile agent requests the predicate move/1 to the meta agent. for example  if mobile agent named mover intends to move the host 1.1:1  this means that ip address is 1.1 and port number is 1   the following request is established.
move  mover  '1.1:1'  
the meta agent captures the status of the agent  figure 1 line:1   sends them to an appropriate meta agent on the target host figure 1 line:1   and then delete the agent figure 1 line:1 . when the transportation fails  the agent is not migrated and continues its execution on the local host  figure 1 line:1 . a meta agent on the target host receives the request to resume the mobile agent. for instance  the following predicate is called on the meta agent   the string '....' means the encoded binary data of the mobile agent. .
receiveagent  mover  '....'  
the meta agent decodes and verifies the status of the mobile agent  and then resume its execution on the target host  figure 1 line:1 .
1 move  agent  host   :1	serialize  agent  bin   
1 transmittermetaagentname t   1 request  t  receiveagent  agent  bin    host   1 deleteagent agent  !. 1 move  agent      :1 resume  agent  .
1 receiveagent  agent  bin   :-
1 deserialize  agent  bin   
1 verify  agent    1	resume  agent  .
figure 1: an example of transmitter meta agent
1. biddingbot : an application
we have proposed biddingbot  a system which can support bidding to several auction sites simultaneously by the cooperative bidding agents. in this section  we show how biddingbot system is implemented by using the milog framework.
figure 1 shows the architecture  on the left of the figure 1  and the user interface  on the right of the figure 1  of biddingbot. biddingbot consists of one leader agent and several bidder agents. each bidder agent is assigned to an auction site. each agent is implemented by using the milog framework. the bidder agents cooperatively gather information  monitor  and bid in the multiple auction sites simultaneously. the communications among agents are implemented by using shared clause databases and querying to other agents. the leader agent facilitates cooperation among the bidder agents as a match-maker  sends a user's request to the bidder agents  and presents bidding information to the user. the leader agent interacts with a user as a www server on the milog framework. the cooperation protocol are implemented by finite state machines in which the state is changed by receiving a certain query from other agents. in biddingbot  each of the bidder agents is specified to her auction site and can behave as a flexible wrapper  since different auction sites represent information in different forms. wrapper functions on the bidder agents are implemented by using a pattern description language in the milog.
1. conclusion

figure 1: the biddingbot system
in this paper  we proposed milog  a logic-based framework for constructing mobile intelligent information agents. since the milog supports multi-thread programming and messaging mechanisms among agents  we can effectively implement cooperation mechanisms among agents. we demonstrated a simple meta agent program which can be extended by applying models for security  authorization  and transportation management mechanisms for realizing efficient migrations of agents. we have implemented biddingbot  an online auction support system by using the milog framework. we demonstrate that our approach is useful to incorporate intelligent behaviors into mobile agents.
