we describe our experience with two new  builtfrom-scratch  web-based question answering systems applied to the trec 1 main question answering task  which use complementary models of answering questions over both structured and unstructured content on the web. our approaches depart from previous question answering  qa  work in several ways. for unstructured content  we used a web-based system with novel features such as web snippet pattern matching and generic answer type matching using web counts. we also experimented with a new  complementary question answering approach that uses information from the millions of tables and lists that abound on the web. this system attempts to answer factoid questions by guessing relevant rows and fields in matching web tables and integrating the results. we believe a combination of the two approaches holds promise. 
1 introduction and previous work 
the systems described in this paper are entirely webbased and explore two different research directions: one is to employ a web search engine to mine text web pages  unstructured web information henceforth   the other to employ the already structured web information in the form of html tables  which typically summarize various relations of interest to web users. 
there has been a substantial amount of work on using web information and search engines for trec qa  starting from the premise that a data collection such as the trec corpus has considerably less answer redundancy than the web and thus  it is easier to match a question to the web data  to extract answers from the matching text  and then project these answers on the restricted data collection  e.g. brill et al.   radev et al.   ramakrishnan et al.  . 
most of the published web-based qa systems focus on one language  english  and employ advanced natural language processing tools and/or extensive hierarchies of answer matching rules and answer types. from a practical perspective  i.e.  having a search engine handle natural language questions in all markets in which it is deployed   such assumptions cannot be made. while previous approaches investigated how to scale current paradigms to general qa on the web  e.g. kwok    one of our main goals was to determine what performance can be achieved with a moderate annotation effort  in our case  one person-day  by a web-based qa system. 
because previous research on question answering largely ignored existing html tables and focused either on natural language text from web pages or online databases  another important goal of this work is to investigate a new way of using the existent structured information on the web to retrieve answers to factoid questions. by exploiting the explicit tabular structures created by the web document authors  we can  in principle  get natural language understanding  for free  and hence  advance the applicability and scalability of question answering. 
there have been many efforts to extract structured information from the web. previous approaches  e.g.  agichtein and gravano   etzioni et al.   focused on extracting specific relationships  e.g.   is a    which can then be used to answer the specific questions that these relationships support  e.g.   who is x  . in this work  we attempt to support any question by finding the structured table s  on the web where this question was already answered. unfortunately  many of the most useful tables do not contain the text patterns these systems look for. by indexing  all  potentially useful tables we are more likely to achieve high coverage of user's questions. 
in a closely related study  hildebrandt et al.  used a large number of dictionaries and lists  some of which were constructed dynamically by querying sites such as amazon. unlike in our approach  the lists were specific and were constructed in advance for each question type. to the best of our knowledge  our study is the first attempt to integrate  index  and exploit millions of tables for question answering. 
1 systems description 
1 common system architecture 
figure 1 outlines the architecture of the two proposed systems. in this section  we describe the preprocessing and post-processing blocks common to both systems. sections 1 and 1 present in detail the novel features of these systems. 
