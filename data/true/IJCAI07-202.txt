mechanism design has traditionally focused almost exclusively on the design of truthful mechanisms. there are several drawbacks to this: 1. in certain settings  e.g. voting settings   no desirable strategyproof mechanisms exist; 1. truthful mechanisms are unable to take advantage of the fact that computationally bounded agents may not be able to find the best manipulation  and 1. when designing mechanisms automatically  this approach leads to constrained optimization problems for which current techniques do not scale to very large instances. in this paper  we suggest an entirely different approach: we start with a na¡§ ve  manipulable  mechanism  and incrementally make it more strategyproof over a sequence of iterations.
we give examples of mechanisms that  variants of  our approach generate  including the vcg mechanism in general settings with payments  and the plurality-with-runoff voting rule. we also provide several basic algorithms for automatically executing our approach in general settings. finally  we discuss how computationally hard it is for agents to find any remaining beneficial manipulation.
1	introduction
