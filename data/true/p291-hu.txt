comments left by readers on web documents contain valuable information that can be utilized in different information retrieval tasks including document search  visualization  and summarization. in this paper  we study the problem of comments-oriented document summarization and aim to summarize a web document  e.g.  a blog post  by considering not only its content  but also the comments left by its readers. we identify three relations  namely  topic  quotation  and mention  by which comments can be linked to one another  and model the relations in three graphs. the importance of each comment is then scored by:  i  graph-based method  where the three graphs are merged into a multirelation graph;  ii  tensor-based method  where the three graphs are used to construct a 1rd-order tensor. to generate a comments-oriented summary  we extract sentences from the given web document using either feature-biased approach or uniform-document approach. the former scores sentences to bias keywords derived from comments; while the latter scores sentences uniformly with comments. in our experiments using a set of blog posts with manually labeled sentences  our proposed summarization methods utilizing comments showed significant improvement over those not using comments. the methods using feature-biased sentence extraction approach were observed to outperform that using uniform-document approach.
categories and subject descriptors
h.1  content analysis and indexing : abstracting methods; h.1  information search and retrieval : information filtering
general terms
experimentation
keywords
document summarization  blog  comments  graph-based scoring  tensor-based scoring
permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. to copy otherwise  to republish  to post on servers or to redistribute to lists  requires prior specific permission and/or a fee.
sigir'1  july 1  1  singapore.
copyright 1 acm 1-1-1/1 ...$1.
1. introduction
1 motivation
　document summarization has always been an important research topic in information retrieval  ir . most existing document summarization tasks take either one document or multiple topically related documents as input  and generate a short document containing the main topics covered by the input document s   1  1  1 . the resultant summary is therefore determined by the document content provided by the author s . with the popularity of social websites  e.g.  blogs   many web documents are now presented together with annotations given by their readers in the form of tags  comments  ratings  and others. these user generated annotations are valuable input from the readers and can be utilized in different ir tasks. for instance  tags were shown to improve web search in . in this paper  we focus on comments-oriented document summarization and aim to summarize a web document using not only its content  but also the comments contributed by its readers.
　the comments-oriented document summarization task to produce a concise document covering the topics presented in the document that are discussed among readers who gave the comments is interesting for at least three reasons. first  despite their informal tone and style of writing  comments represent readers' understanding or feedback about a web document's content. by considering these comments  the generated summary can better capture the input from the readers  as opposed to the author of the document only. that is  a comments-oriented summary provides balanced views from both author and readers. second  most websites present a web document  e.g.  blog post  together with its comments. in a separate study on blog conversation  it was found that readers treat comments associated with a post as an inherent part of the post . a comments-oriented summary hence better matches one's understanding of the document as readers often read the document together with its comments. third  the generated summary could better support many ir applications. one example application is blog search. many existing blog search engines rank results by recency of posts . a post is ranked at the top because of its recency and/or its containing of a query keyword. with comments-oriented summary  a post can be ranked high if the query keyword is relevant to the main topic of the post identified by its readers through comments.
1 overview and contributions
　in this research  we aim to generate comments-oriented summary in the form of extracted sentences from a given

figure 1: comments-oriented summarization
web document. as shown in figure 1  we view the given document as a set of sentences and score them with input from both the document and its comments. a subset of sentences is then selected to form the summary satisfying the length requirement. the main focus is sentence scoring  which is expected to deal with two challenges. firstly  the number of comments varies significantly from one document to another. in the extreme case  a document may not receive any comment. in this case  we may have to fall back to identifying important sentences by the document content only. secondly  comments are inherently informal and noisy. many comments may contain information irrelevant to the web document content.
　depending on the way comments are utilized in sentence scoring  our proposed summarization techniques are classified into either feature-biased approach or uniform-document approach. in feature-biased approach  we treat commentsoriented summarization task as query-biased summarization task  where the query are those keywords derived from the comments. determining the importance of comments  and hence the words appearing in them  is therefore the key of feature-biased approach. in uniform-document approach  we form a virtual document from the given document and its comments such that it consists of a set of text units. here  a text unit is either a sentence from the document or a comment. the summary is composed by those highly scored text units that are sentences from the original document. many techniques developed for ranking sentences in single document summarization could therefore be extended to address comments-oriented summarization using uniform-document approach. in particular  we show in this paper that the techniques for ranking comments  i.e.  in the feature-biased approach  can be easily extended to score text units.
　to score comments  we model the relationships among them using three graphs  namely  topic  quotation and mention graphs. given the three graphs  two techniques are proposed in this paper. one is to merge them into one multi-relation graph and perform graph-based scoring using random walk algorithm  1  1 . another is to construct a 1rd-order tensor and score the comments using tensor decomposition. to the best of our knowledge  this is the first effort to bring tensor-based analysis into document summarization. with the combinations of two scoring techniques and two summarization approaches  we compare the four methods in our experiments using manually labeled documents.
　our major contributions in this research are as follows. firstly  we propose two approaches to address commentsoriented document summarization. in the feature-biased approach  words appearing in comments but not in the given document do not contribute to scoring sentences. the approach is more tolerant to noise in comments. in the uniformdocument approach  when there is no or very few comments  the problem naturally degrades to single document summarization. secondly  we introduce tensor-based scoring to score comments  or sentences  in document summarization. compared to graph-based scoring  tensor-based scoring can directly deal with multiple relations among comments  or sentences  that may also be presented in other document summarization problems besides comments-oriented summarization.
1 paper organization
　the rest of the paper is organized as follows. in section 1  we review the related studies. the relationships among comments are given in section 1. the graph-based and tensorbased scoring algorithms are proposed in section 1  followed by the two approaches for comments-oriented summarization in section 1. our experiments are reported in section 1. we conclude the paper in section 1.
1. related work
　to generate an extractive summary  sentences in the document s  are to be scored according to their salience in representing the major topic s  of the document s . techniques proposed in literature that aim to measure the salience of sentences can be broadly categorized into three groups: lexical chain based methods  1  1   feature-based methods  1  1  and graph-based methods  1  1  1 . in lexical chain based methods  a lexical-chain is defined by a coherent sequence of related nouns  verbs  etc.  computed based on a thesaurus such as wordnet. sentences are then scored according to the lexical chains they belong to. in feature-based methods  each sentence is scored based on some features including position  length  cue phrases  signature words  etc. in graph-based methods  a sentence sharing similar content with another is considered as a semantic recommendation to the latter. pagerank  like algorithms are used to score sentences in a graph constructed through the semantic affinity among sentences. it was also shown that graph-based method can improve single-document summarization by incorporating multiple documents of the same topic .
　recently  web document summarization has gained interest from many researchers. based on the assumption that queries related to a web page provide some human understanding about that page  sun et al proposed to summarize web pages using clickthrough data in . in their work  a word was weighted by a linear combination of its term frequency in the page and its term frequency derived from the page's clickthrough record. both lsa  latent semantic analysis -based and luhn's methods  were applied to select sentences from web pages and the two methods achieved comparable performance. the proposed approach is similar to our feature-biased approach as both involve extra knowledge to the document to be summarized. nevertheless  comments contributed by readers on a web document are quite different in nature from clickthrough record generated by a search engine.
　summarization of blog post  a new type of textual content on the web  has not been well studied. zhou et al viewed a blog post as a summary of online news articles it linked to  with added personal opinions . a summary of a blog post is generated by extracting sentences from the blog post that are relevant to its linked news articles. using a similar technique presented in   one sentence that is most dissimilar to the linked articles is deleted from the post at each iteration  until any more deletion would result in a drop in similarity between the summary and the linked articles. comments associated with blog posts were however not used.
　utilizing comments to extract sentences from web documents is quite related to the work of identifying most commented sentences reported in . eight features of comments  such as number of terms common to the post in the comment  number of sentences in the comment  and so on  were identified to represent each comment using a feature vector. the comments were then clustered based on their feature vectors and human experts were involved to determine the relevance of each cluster. the possible relationships among comments were not considered.
　constructing a quotation graph for the purpose of summarization is also related to the work by carenini et al who summarized email conversation using  clue words  obtained from quoted email fragments . emails were first split into fragments and a fragment quotation graph was then constructed from fragments for identifying the  clue words . their fragment quotation graph is similar to our quotation graph constructed from comments  see section 1  as both rely on quotation relation. however  there are two major differences between the two graphs. first  in their fragment quotation graph  each node is a fragment identified from emails; in our quotation graph  each node is a comment  not fragment . second  in   sentences could be extracted from the fragment quotation graph as a part of the summary. in our approach no sentence from comments is extracted.
1. understanding comments
　in this section  we first formally define the problem of comments-oriented document summarization and then discuss the possible relationships among comments.
1 problem definition
　given a document d consisting of a set of sentences d = {s1 s1 ... sn}  and a set of comments associated with d  the task of comments-oriented document summarization is to extract a subset of sentences from d  denoted by sc  sc   d   that best represents the topic s  presented in d and discussed among its comments c.
　in the above definition  d could be a news article  a blog post  or any other web document. the set of comments c generally refers to those short textual messages contributed by readers and attached to d. all our following discussions refer to this setting. nevertheless  the definition does not restrict the form of  comments . a blog post can also be considered as a comment to its referenced post or news article. note that  the task of comments-oriented document summarization degrades to single-document summarization when the given document is not associated with any comment.
1 comments relationships
　comments provide readers' feedback about a web document and also contribute to the discussion of topics presented in the document. the linkages among them often represent the discussion flow. understanding the linkages among comments is hence critical for comments-oriented summarization. based on our observation  three relations

figure 1: model comments and relations
commonly exist among comments  linking one comment to others.
  topic relation. two comments are topically related if they talk about similar topic s   often evidenced by sharing common words. the strength of the topic relationship can be measured by those commonly adopted metrics  such as cosine similarity and jaccard coefficient. the topic relationship may be converted to binary weighted by comparing the strength to a predefined threshold  e.g.  1 . note that  the topic relationship between two comments are bi-directional.
  quotation relation. two comments are related through quotation if one quotes text segment s  from the other. quoting text segment is a strong indication that the current comment replies to the quoted comment or follows its discussion. different from topic relationship  quotation relationship is binary and directional.
  mention relation. if the contributor's name of an earlier published comment appears in a later published comment  the two comments are linked through mention. here  we assume that comments are ordered by time. we consider mention as another type of indication that the current comment replies to the comment s  left by the mentioned contributor1. similar to quotation relationship  mention relationship is binary and directional.
　based on the above three relations  we derive three graphs  namely  topic graph  quotation graph  and mention graph. in each graph  the set of nodes are comments and the set of edges represent the particular relation. the weight associated with each edge is the strength of the corresponding relationship. example of these graphs are given in figures 1 a    b   and  c   all involving the same set of four comments. the affinity matrix of each graph is shown on the right side of the graph. in these three graphs  all edges are binary weighted for clarity.
　compared to quotation and mention  topic relationship is more commonly found among comments. in most cases 

both quotation and mention graphs could be very sparse. however  two comments having very weak or even no topic relationship might be strongly related through mention or quotation. in other words  both quotation and mention relations complement topic relation in identifying the linkages among comments.
　in some websites  comments are presented in a tree-like structure indicating reply relationships among them. as such reply relationship is website specific  we choose not to include it in our discussion. nevertheless  our proposed techniques can be easily extended to include this relation  and other relations  if available.
1. scoring comments
　one important task in comments-oriented document summarization is to determine the importance of each comment in representing the discussed topic s . given the three graphs  we propose two methods to integrate the three graphs and score comments.
1 graph-based scoring
　a straightforward approach to integrate topic graph  quotation graph  and mention graph is to merge them into one multi-relation graph. in the merged graph  the weight of a directed edge between two comments is the total weights received from all the three graphs  as illustrated by figure 1 d  together with the affinity matrix1.
　it is intuitive that important comments are those whose topics are discussed by a large number of other important comments. based on this intuition  we propose to use pagerank  algorithm to score the comments  see equation 1 .

where α is the damping factor as in pagerank  in our experiments α=1 . |c| denotes the number of comments associated with the given document  and w cj ci  is the normalized weight from comment cj to ci derived from the multi-relation graph as shown in equation 1.
		 1 
in equation 1  e cj ck  is the weight on the edge from comment cj to ck in the multi-relation graph  which is the sum of the weights on the corresponding edges in the three graphs; e cj ck  = 1 if comments cj and ck are not related through any of the three relations.
1 tensor-based scoring
　tensor provides a good means to represent multiple relations in one data structure. given the three graphs  a 1rdorder tensor can be constructed  as shown in figure 1 e . in this tensor  both its first and second dimensions  i.e.  mode1 and mode-1  are comments. the third dimension  i.e.  mode-1  represents the relations through which each pair of comments are linked. the constructed tensor therefore captures all three relationships among comments.
　based on the tensor  we measure the importance of comments through tensor decomposition. there are two decomposition techniques  namely  high-order svd  singular


figure 1: parafac decomposition
value decomposition  and parafac  parallel factor decomposition . the former leads to orthogonal singular vector s  in each mode assuming that latent factors are independent of each other. the latter does not assume such independence and produces a number of parallel factors. assuming topics discussed among comments are less independent from each other  we decompose the 1rd-order tensor in figure 1 e  through parafac decomposition  shown in equation 1 and illustrated by figure 1.
		 1 
in equation 1  tensor a is decomposed into r parallel factors  see section 1 on determining the value of r . λr  1 ＋ r ＋ r  is a scalar reflecting the salience of the corresponding factor  which is a topic discussed among comments in our setting. each vr n   n = 1 1  is a vector where values represent the salience of entries along mode-n with respect to factor r; and   denotes outer product  see  for more details . in our setting  vr 1  reflects the salience of comments in supporting topic r  vr 1  reflects the salience of comments in representing topic r  and vr 1  reflects the salience of relations in identifying topic r.
　based on the result of parafac decomposition  we measure the importance of a comment ci by the most salient topic it could best represent  as shown in equation 1.
		 1 
in this equation  vr 1  i  denotes the ith entry in vector vr 1 .
　in both graph-based scoring or tensor-based scoring  the scores computed for comments are normalized in the range of  1  before they are used in other computations.
1. summarization with comments
　we propose two approaches to incorporate comments into document summarization. the first approach scores document sentences based on keywords derived from comments; while the second approach scores document sentences and comments all together. the two comment scoring methods  i.e.  graph-based scoring and tensor-based scoring  presented in section 1 can be used in both approaches.
1 feature-biased approach
　in the feature-biased approach  the task of commentsoriented summarization is formulated as a query-biased document summarization problem where the queries are the keywords derived from comments.
　with comments scored by their importance in representing the discussed topic s   words appearing in many important comments are more topic representative. thus  each word derives its score by accumulating the scores of the comments it appears in  shown in equation 1:
	 	 1 
where score ci  is the importance of comment ci given by either graph-based scoring or tensor-based scoring; wk （ ci denotes that word wk appears in comment ci.
　sentences in the document are scored according to their contained words. specifically  every word in the document receives two weights  one for representing the topics discussed in the comments defined by equation 1  and the other for representing the topics of the document. the latter is measured by the tf，idf value  where the document collection consists of all posts in a blog. the final weight of each word is the linear combination of the two weights after normalization  shown in equation 1. in this equation  β  β   1  is a parameter to control the contribution of the weight received from comments. note that  words in the document that do not appear in any comment receive 1 score from comments.

　we use density-based scoring to measure the importance of a sentence s in the given document .

where k is the total number of keywords  i.e.  non-stopwords  in s; wk and wk+1 are two adjacent keywords in s  and distance wk wk+1  denotes the distance between wk and wk+1 in number of stopwords.
　the comments-oriented summary is formed by extracting those top scored sentences. note that  when there are very few comments associated with a document  the summary produced will be mainly based on the tf ， idf values of the words contained in the document with density-based sentence scoring.
1 uniform document approach
　through the three relations  i.e.  topic  quotation  and mention  comments are linked together and modeled in either a multi-relation graph or a tensor. in uniform-document approach  we further extend topic and quotation relations to link comments to sentences from the given document. if a comment discusses a similar topic with a sentence  they are topically related. similarly  a comment and a sentence are related through quotation if the comment quotes a text segment from the sentence.
　with the extended relations  both the sentences from the document and the comments associated with the document are treated uniformly as text units. based on our discussion in section 1  these text units can be modeled in either a multi-relation graph or a tensor and scored with the corresponding scoring method. to generate a comments-oriented summary  those highly scored text units that are sentences from the original document are extracted to form the summary.
　in uniform document approach  if a document is associated with very few or even no comment  the summary produced will be mainly based on the topic graph formed by the sentences  i.e.  text units  in the document.
table 1: summarization methods
scoring/approachfeature-biaseduniform-docgraph-basedfeaturegraphdocgraphtensor-basedfeaturetensordoctensortable 1: dataset statistics
average number ofsentences per post1comments per post1quotations among comments per post1mentions among comments per post11. experiments
　recall that both feature-biased and uniform-document approaches work with either graph-based scoring or tensorbased scoring. we have in total four comments-oriented document summarization methods  shown in table 1. in this section  we evaluate these four methods with manually labeled documents.
1 dataset and performance metric
　without existing benchmark dataset  we collected data from two blogs  cosmic variance1 and ieblog1  both receiving large number of comments. from all posts collected  we randomly picked up 1 posts  1 from each blog  to form our evaluation dataset. table 1 gives the statistics on these 1 posts. to generate reference summaries  1 human summarizers were asked to read both the posts and their corresponding comments and then label approximately 1 sentences1 for each post1. the labeled set of sentences form the human generated summaries in our evaluation.
　two performance metrics  namely  rouge and ndcg  are used to evaluate the effectiveness of the proposed methods. rouge has been widely adopted for evaluating document summarization methods . it evaluates the machine generated summary against human generated summary  labeled sentences in our setting  by counting overlapping units such as n-gram. we used rouge-1.1 package and report the f-measure of rouge-1  i.e.  unigram . we choose to report f-measure instead of recall as the human generated summaries are limited by number of sentences  not words . in our evaluation  for each document  each method returns the top 1 scored sentences to form the machine generated summary whose length  in number of sentences  matches human generated summary. the selected sentences are ordered according to their positions in the original document. the values reported are averaged over the 1 human generated summaries for the 1 blog posts.
　given a ranked list of retrieved documents with their relevance level in response to a query  ndcg  normalized discounted cumulative gain   is computed through equation 1:
	 1 
1
http://cosmicvariance.com
1
http://blogs.msdn.com/ie/
table 1: different inputs for methods
symbolmethod inputpblog post only  no comments is givenpcttopic relationship among text unitspctqtopic and quotation relationshipspctmtopic and mention relationshipspctqmtopic  quotation  and mention relationshipswhere z is a normalization factor derived from the perfect ranked list of k documents; r p  denotes the relevance level of document at rank position p. in our setting  each sentence in the extractive summary is an object to be ranked and the relevance level of each sentence is defined by the number of summarizers labeled it. for example  the relevance level of a sentence is 1 if three summarizers labeled the sentence and 1 if no summarizer labeled the sentence. in our evaluation  for a given document  k is also set to 1. the reported ndcg is averaged over 1 posts.
1 methods
　we evaluated the four methods listed in table 1  namely  featuregraph  docgraph  featuretensor  and doctensor  with different inputs to simulate the cases where different relationships among comments are available. as shown in table 1  p denotes that only the post is available to the summarization methods. the problem is analogous to singledocument summarization. pct denotes that both the post and the topic relationships among comments are available to each method. similarly  pctq  pctm  and pctqm refer to the inputs consisting of the blog post and the corresponding relationships respectively. specifically  with pctqm  all the three relationships discussed in section 1 are given to the summarization methods.
　different from quotation and mention that are binary  e.g.  weighted by 1 or 1   the topic relationship between two comments needs to be measured. in our experiments  we used cosine similarity to measure the strength of topic relationship and evaluated two settings: weighted and unweighted. with weighted setting  the edges in the topic graph are weighted by the cosine similarity. with unweighted setting  every edge carries the same weight of 1 if the cosine similarity is greater than 1 as in . nevertheless  our experimental results showed that with unweighted topic graph  slightly better performance was achieved for almost all methods. for the sake of page space  we choose to report the results using unweighted topic graph only.
　to perform the parafac decomposition  we used matlab tensor toolkit   where the number of factors  i.e.  r  needs to be specified. as the number of salient factors in sentences and comments of a blog post is usually not known beforehand  r is simply set to be the number of text units  i.e.  comments and/or sentences  to be scored.
1 experimental results
1.1 method comparison
　in the first set of experiments  we compare the performance of the four methods with the five different inputs. for all methods with feature-biased approach we set β = 1  see equation 1 . the impact of using different β's is further studied in the second set of experiments reported in section 1.1.
　the summarization accuracy by rouge-1 and ndcg are reported in table 1 and plotted in figure 1 for easy comparison. given a particular input  e.g.  pctqm  the best performance is highlighted in bold in table 1. from the results  the following observations can be made.
　firstly  for all four methods  much better performance were achieved when comments were used  i.e.  pct  pctq  pctm  or pctqm   compared to using post only  i.e.  p  according to both rouge-1 and ndcg. almost all improvements are statistically significant  p ＋ 1 based on paired t-test ; the few non-significant ones are indicated by
 
　in table 1. such results well support our hypothesis that comments contain valuable information for better document understanding.
　secondly  methods using feature-biased approach achieved better performance than those using uniform-document approach. according to rouge-1  featuregraph achieved significantly better performance than docgraph with all inputs except p and pctq  p ＋ 1  indicated by * in table 1 ; featuretensor always significantly outperformed doctensor. according to ndcg  featuregraph outperformed docgraph significantly with all inputs except p  and featuretensor achieved significantly better performance than doctensor with pct  pctm  and pctqm. one possible reason for the worse performance of methods using uniform-document approach is that not all comments are quite relevant to the post due to noise. using feature-biased approach  words contained in those noisy comments do not contribute to the sentence scoring as long as the words do not appear in the blog post. however  these comments might affect the sentence scoring for methods using uniformdocument approach.
　thirdly  featuregraph and featuretensor performed comparably  with featuregraph being slightly better according to rouge-1  and featuretensor being slightly better according to ndcg. in specific  the best rouge-1 was achieved by featuregraph with pctqm  and the best ndcg was achieved by featuretensor with pctqm. in short  all the three relations considered in section 1 could improve the comments-oriented summarization accuracy.
1.1 impact of β to feature-biased approach
　in this section  we study the impact of β to the methods using feature-biased approach  i.e.  featuregraph and featuretensor. recall that β is the coefficient involved in combining the two weights of a word received from the document and the comments respectively. the larger the β  the more emphasis is given to the weight received from comments  see section 1 . we varied β from 1 to 1 to observe its impact to the two methods.
　the performance of featuregraph and featuretensor with different β values are reported in figure 1. note that  when β = 1  a word is weighted solely on blog post content  i.e.  tf ， idf value  and no comment is used in summarization.
　as shown in figure 1  when β is greater than 1  better summarization performances were observed for both methods compared to that with β = 1. this strongly suggests that incorporating comments benefits blog summarization. evaluated by rouge-1  both featuregraph and featuretensor followed similar trend with different β values. starting from 1  improvement on rouge-1 value was observed till β = 1 followed by small decrement till β = 1. nevertheless  the decrement is not significant. evaluated by ndcg  sum-
　
table 1: summarization accuracy by rouge-1 and ndcg
methodrouge-1ndcgppctpctqpctmpctqmppctpctqpctmpctqmfeaturegraph11*11*1*11*1*1*1*featuretensor1*1*1*1*1*11*11*1*docgraph1111 1 11111doctensor11 11111 111
	 a  rouge-1	 b  ndcg
figure 1: summarization accuracy  β=1 

	beta values	beta values

	beta values	beta values
 c  featuregraph by ndcg	 d  featuretensor by ndcg
figure 1: impact of β to featuregraph and featuretensor
　
marization accuracy kept on increasing till β = 1. when β is larger than 1  the performance of the methods were less affected by the value of β.
　in summary  based on this set of experiments  β = 1 is a reasonable setting in combining the two weights  derived from document and comments respectively  of a word.
1.1 further discussion
　in our experiments  graph-based and tensor-based scoring methods achieved comparable summarization accuracies. in this section  we further discuss the two methods with respect to their computational cost and representation power.
　let n be the number of sentences and/or comments  m be the number of relations under modeling  r be the number of latent factors  and i be the number of iterations needed for convergence in the computation. graph-based method has space complexity of o n1  to store one transition matrix for its computation  while tensor-based method has space complexity of o mn1 . nevertheless   in most cases  meaning that the two methods are comparable in space complexity. on the other hand  graph-based method has time complexity of o in1   while tensor-based method has time complexity of o ir1n+m    analyzed according to    where r = n in our case. in short  graph-based method is more computational efficient than tensor-based method.
　however  tensor-based method has its power in representing multiple relations among the given set of objects and their relationships. in our summarization task  topic  quotation  and mention are three example relations that have been considered. other relations  that link one sentence/comment to another  can be naturally incorporated into this method by extending the 1rd-mode of the tensor. however  in graph-based method  multiple relations are merged and their semantics are thus lost and unreconstructible.
1. conclusion
　leaving comments on web documents  or other web objects  has become an important feature for many websites especially the social websites. those comments contributed by readers provide valuable information to better understand the web documents. in this paper  we studied commentsoriented document summarization that aims to generate an extractive summary for a web document using comments contributed by its readers. we construct three graphs based on the three types of relationships among comments. depending on the way the three graphs are merged into one data structure  two scoring methods known as graph-based scoring and tensor-based scoring are proposed to measure the importance of comments. we further propose two approaches to integrate comments into document summarization for generating comments-oriented document summaries. by varying input parameters and using a manually labeled set of blog posts  we evaluated four methods. our experiment results suggest that including comments into the summarization improved summarization accuracy significantly.
