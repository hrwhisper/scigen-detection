webmacros is a proxy-based system for automating repetitive user interactions with the web by recording and replaying user navigation. the innovations in the system include its ability to compare html pages based on structure  which is used to verify the correct playback  and the ability to remotely execute and share macros. 
keywords 
macro  demonstration  playback  sharing  proxy 
1. introduction 
web technologies including post forms  dynamically generated pages  cookies  expiring session tokens etc.  have made traditional bookmarks and histories insufficient for managing users' personal views of the web. many pages do not have a well-defined url  but require a sequence of steps to be retrieved; these were termed hard-to-reached pages . examples of hard-to-reach pages include citation engine searches and airfare availability queries. the need to automate repetitive user interactions with the web motivated us to develop webmacros   a system for demonstrating and playing user actions on the web. 
1. webmacros features 
1 creating macros by recording user actions 
a user initiates recording of a macro explicitly  by navigating to the webmacros controls page  its url can be bookmarked or placed in a browser toolbar   and pressing the  start recording  button. she then demonstrates the macro by the normal process of web navigation and form filling. page retrieval speeds are comparable to those when no recording occurs. when all the steps are demonstrated  the user presses the  stop recording  button and is prompted to enter macro name and description. 
1 support for parametric macros 
as a user demonstrates a macro  she can specify the type of input and select form elements by clicking on radioboxes added by the recording system. the following parameter types are supported: private  default for password and inferred username fields   constant  default for all other fields   and variable. during playback  recorded values of constant and variable fields are substituted into each retrieved page; constant fields cannot be overridden by the user. 
1 verifying pages retrieved at playback 
since each macro step can at playback retrieve an unexpected page  such as a login failure  or no results matching a query   the system needs to compare the retrieved pages against the recorded ones. however  verbatim comparison of html content is insufficient for many dynamically generated pages  since a server can populate the same html template with different results based on current data and playback parameters. 
to compare pages based on structure rather than content  webmacros represents them as sets of path expressions in the html parse trees. our experiments on ebay! and amazon.com data  indicate that a simple page structure similarity measure reliably classifies pages into types  and can be used to verify results of webmacros playback. 
1 interactive and batch macro playback 
a user can replay a recorded macro either in a batch mode  in which the system loads in the browser only the last retrieved page  or in an interactive mode. interactive mode is useful when the user is interested in pages produced by intermediate macro steps. webmacros provides a javascript-based playback control panel with the prev  next  play  and last buttons. in the interactive mode  webmacros detects when the user sidetracks from the recorded path  by matching recorded and actual url  form data  and page structure. the user can resume playback later from the control panel. 
1 encapsulating cookie context in macros 
http was designed as a stateless protocol; however  the cookie extension allows servers to store state between http requests. what page is retrieved by a user may depend on the current cookie context. when used with the two popular desktop browsers  netscape navigator and internet explorer  ie   the webmacros system optionally includes pre-existing user cookies in a macro during recording. at playback  the user can choose whether cookies included with the macro  or the current ones take priority. encapsulating cookie context in macros allows their remote playback and sharing. 
1. proxy architecture 
the webmacros system is designed as a pure http proxy  figure 1 . it operates by intercepting the http stream between the user's browser and the www and modifying the received html. the advantages of the proxy architecture include: 
  a lightweight browser is sufficient for recording and replay. 
as web access is brought to pdas and other wireless devices  web clients other than ie and navigator must be considered. web clients for this class of devices are likely to be simple and lightweight; they may not have a built-in jvm needed for the recording and playback applet.    a proxy does not need  security clearance . for the applet to read/write local files and modify pages  the user must confirm its file and browser access privileges. a proxy does not have this limitation  and can be configured sitewide without user intervention. 
  a proxy enables remote use and sharing of web macros if a trusted third-party server hosts the recording and playback proxy  users can access macros they recorded from multiple computers  and can also share macros. 
  a proxy does not depend on the browser for page retrieval. 
since a proxy does not use the browser to retrieve macro steps  the proxy can display in the browser only the page retrieved on the last step. in an interactive playback mode  a client-based playback implementation cannot easily determine if the browser has completed loading. 
