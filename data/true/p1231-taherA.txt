web service may be unable to interact with each other because of incompatibilities between their interfaces. in this paper  we present an event driven approach which aims at adapting messages exchanged during service interactions. the proposed framework relies on complex event processing  cep  technology  which provides an environment for the development of applications that need to continuously process  analyse and respond to event streams. our main contribution is a system that enables developers to design and implement cep-based adapters. these latter are deployed in a cep engine which is responsible for continuously receiving messages and processing them according to rules implemented by the adapters. resulting transformed messages are thus forwarded to their original service recipient.
categories and subject descriptors
h.1  information storage and retrieval : online information services-web-based services
general terms
design  experimentation  management
keywords
web service adaptation  cep technology
1.	introduction
　the interface of a web service is defined as the set of messages it can send and receive and the inter-dependencies between them. it is a contract the service and its partners must respect. when an existing service has to interact with another one  their interfaces are more likely to be incompatible    . when this happens  they are two options:  i  force one of the services to support a new  compatible  interface. this solution is usually unsatisfactory because services then

 
 this work is funded by the project web intelligence granted by the french rh one-alpes region. most of it was done when yehia taher was visiting the bpm group at qut 
brisbane.
copyright is held by the author/owner s .
www1 april 1  1  beijing  china.
acm 1-1-1/1
have to expose as many interfaces as interactions they are involved in.  ii  supply an adapter responsible for receiving  adapting  and transmitting messages from one service to the other despite incompatibilities of their interfaces    . implementing ad-hoc adapters is a costly and tedious task. moreover  most of the time an adapter is specific to a pair of services and cannot be reused    .
　the study presented in this paper aims at designing a framework for specifying and generating web service adapters. our contribution is twofold:  i  the proposed framework supplies operators corresponding to different situations of adaptation  and these operators may be composed to deal with more complex incompatibilities of interfaces. the resulting reusable mapping is then compiled and deployed into a cep engine.  ii  we defined a methodology for using cep technology in a service oriented architecture.
	1.	event-driven adaptation
	1	illustration
　as a motivating example we consider a service ssel intended to offer products for sale  and a service scons which is meant to place orders against ssel. while scons was designed in such a way an order of n items is realised by sending n messages  ssel expects an order to be sent at once. to deal with the resulting incompatibility the behaviour of the required adapter is as follow. messages sent by scons are received and stored  and messages related to the same order are grouped together. when a condition is satisfied  meaning that an order is completed  an aggregation operation is applied on all related messages. this process results in forwarding to scons a message that contains the order as expected by ssel's interface. since multiple conversation could coexist between scons and ssel  there is a need to correlate message belonging to the same conversation. figure    depicts such an adaptation process.
	1	approach
　an event driven architecture  eda  is a software architecture paradigm promoting the production  detection  consumption of  and reaction to events. event consumers subscribe to an intermediary event handler  and event producers publish to this handler. when an event is received  the event handler forwards it to the consumer. while eda deals with patterns of simple and ordinary events  complex event pro-
1

www 1 / poster paper	april 1  1 ， beijing  chinafigure 1: adaptation example
cessing1  cep  is a new eda paradigm that allows of simple events to be aggregated into complex ones. more precisely  cep is a platform for building and running event-based applications that could continuously process event streams to detected a specified confluence of events  and trigger a specific action when the events occur. most of existing cep platforms provide a continuous computation language for specifying queries each of which defining the schema of an event stream to be monitored  defining event patterns to be detected  specifying processing functions and sequencing  and finally declaring output to be generated.
　as web service interactions rely on message exchanges  the process of adaptation consists in consuming incoming messages  processing them  and finally producing messages. with this setting  cep fulfils web service adaptation requirements. exchange messages are modelled as events  the message adaptation logic is encoded in terms of continuous computation queries  ccq   that allow the cep engine to observe message events and detect the predefined adaptation situations. by doing so  a cep engine hosting the adaptation ccq  is able to intermediate messages interactions between web services  and acts as a web service adapter.
1.	system overview
　as part of our contribution  we provide developers with a framework that allows designing  building and deploying cep -based web service adapters. figure    depicts the proposed framework architecture which is discussed below.

figure 1: framework architecture
1	design-time environment
　we have designed a set of template adaptation operators  where each of them is intended to deal with a specific adaptation situation. more complex adaptation situations could be addressed by composing these operators. designers of adapters have to identify which adaptations need to be performed between two services  and then wrap the corresponding composition of operators into a map. a graphical user interface meant to ease this task is supplied. subsequently  maps are exported to the ccq code generation tool  which integrates a compiler component used to produce a cep execution-time module. eventually  maps are loaded into the cep execution engine. we model each operator by a specific automaton therefore easing verification of operator composition correctness. this latter is then compiled and deployed as a cep module.
	1	run-time environment
　the run-time environment consists of a cep infrastructure including a cepexecution engine and a set of soap integration layers  which allow a cep engine to be integrated in a service oriented architecture. the cep engine is embedded as the most important component in the system architecture. it provides the core service of receiving  correlating  analyzing and processing messages against loaded ccq. upon a situation detection  events such as message manipulation and production  are generated in response. while web services communicate through the use of soap messages  the intermediate adapter should be able to consume  analyze  and forward soap messages. to deal with this issue  we have designed a soap integration layers model meant to wrap the cep infrastructure. such a model consists of input and output wrappers. a soap input wrapper is used to consume soap messages issues from an output action at the sender service interface. after receiving a message  the input wrapper is meant to transform it to a representation appropriate to the cep engine  and then publish it into the engine. similarly  an output wrapper gets produced event from the engine  transform it in a soap message and then forward it to the corresponding input action at the final receiver service.
	1.	conclusion
　in this paper  we have integrated cep technology with service oriented architecture. in particular  we have described how to use an event driven system to adapt message interactions between web services with incompatible interfaces. an ongoing study  still relying on the cep technology  aims at addressing more complex adaptation challenges in service oriented architecture  such as dealing with incompatibilities between web service interaction protocols.
