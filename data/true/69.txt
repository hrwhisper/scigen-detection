the application design and development methodologies based on uml are well-known  widely used in practice and proved to be critically important for object-oriented design. however  these methodologies and tools do not provide specific support for modelling issues peculiar to web application.
   this paper defines an uml extension capable to refine the design of the client part of web application. several new diagrams are specified with provide for precise definition of the content of web pages and navigation between them.
keywords
uml  web application design  hypermedia design  navigation  browsing semantics
1 introduction
a design and development of a web application differ significantly from more traditional stand-alone and client-server ones. it usually has to comply with several kinds of requirements like scalability  security  which are common for client-server and web   and portability of the client software  which is more specific for web applications . they are supposed to provide dynamic generation of the user interface  advanced presentation features  and be easily customizable. these requirements make the design of such an application a challenging task.
   several research efforts addressed hypermedia application design focused on data-intensive web-sites  1  1  1  1  1 .for data model they use entity-relationship model or its extension  for navigation they provide predefined navigation constructs.
   another recent and the closest to us approach is webml language   which provides orthogonal models for designing structure  composition and presentation. however  it uses its own restricted notation and fails to express advanced composition and navigational constructs. we avoid this kind of limitations relying on the power of uml.
   modeling of web applications with uml is described in . this work covers various aspects of the topic. however  this approach uses only class  i.e. static  diagrams to represent both behavioral and structural things  reducing the clarity. another point is that the stereotypes chosen for this notation are bound to the certain technologies  complicating the creation of conceptual abstract design.
   we provide the uml-based methodology for modeling the content of web pages  composition diagram  and navigation between them  navigational diagram . this methodology gives possibility to create an abstract hypertext view regardless of

figure 1: example of the navigation diagram.
the technologies used in the client and server side. the final result of such design is a precise definition of a number of pages interconnected with hypertext links. the tool that supports our notation can also provide the prototype of user interface generated from the diagrams.
1 navigation diagram
the navigational diagram is implemented as a special case of the uml statechart diagram. it is intended to model navigation issues of the hypertext and helps to visualize the behavior of the user in the system. the whole web application is modeled as state machine attached to the abstraction of the user. when browsing the web application the user comes to various pages. each of the pages can be modeled as state and browsing as transition between states. the user leaves the state when some event occurs. this event is initiated by user  when he clicks the hyperlink or presses submit button  or by the system  when he is redirected to some page after a certain amount of time . the user events are shown with dashed line  the system with solid line. pages are presented in this diagram regardless of their content. links that exist on many pages are modeled as high-level transitions. an example of the navigation diagram for the simple library application is shown on figure 1.
   sometimes we need possibility to display to the user several documents at once in different browser windows. these windows can be peers or child window can be opened as a pop up from the main one. the general idea is to model multiple windows as concurrent regions of the composite state. this decision enables us to see for each moment what windows do we show to the user. this also helps to define the when the window should be opened or close avoiding lost windows.
   this diagram brings the client-side view at glance. it shows the linked collections of pages presented to the user  the alternatives of the browsing and exceptional situations.
1 composition diagram
the composition diagram is a special case of class diagram. we use it to express structure of the web pages and identify their content: how they are connected together and what data is carried from one page to another. we also show how pages are related to business data that they represent. the composition diagram provides static view of web pages  rather than behavioral features. only links that are essential for structure are shown in this diagram and neither conditional nor exceptional situations are represented here. this diagram can be used for generating jsp and html code.
an example of such diagram is shown in the figure 1.
   the main notion of the composition diagram is the page  defined as an autonomous block of screen. each screen in the navigation diagram is mapped into several pages in the composition diagram. the tool may provide links from pages to screens and vice versa to show their relationship. a page is modeled in composition diagram as a class stereotyped   page  . a page may play role of container for other pages. nested pages are modeled as aggregated classes.
   the page has elements like buttons  links and input fields. they are modeled as attributes of the corresponding page. the   form   stereotype is a child of   page  . it is used to model html forms.
after defining pages we need to connect pages to make hypertext. usually the user jumps to other page when he clicks

figure 1: example of the composition diagram.
the hyperlink or presses submit button. this behavior is reflected in the navigational diagram. however  we need to show what information is carried from the source page to target one. the navigable association between source and target pages is stereotyped   link  . each   link   has a tag context with expression as value. the expression determines what information to show in the target page depending on the state of the source page. the expression can be written in the human language  pseudocode or ocl. if context is empty  then pages are connected in a free way and no information is sent from source page to target one.
1	acknowledgement
the work of the second author was partially supported by russian foundation for basic research under grant 1-1.
