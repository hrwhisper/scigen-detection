the wide popularity of free-and-easy keyword based searches over world wide web has fueled the demand for incorporating keyword-based search over structured databases. however  most of the current research work focuses on keywordbased searching over a single structured data source. with the growing interest in distributed databases and service oriented architecture over the internet  it is important to extend such a capability over multiple structured data sources. one of the most important problems for enabling such a query facility is to be able to select the most useful data sources relevant to the keyword query. traditional database summary techniques used for selecting unstructured data sources developed in ir literature are inadequate for our problem  as they do not capture the structure of the data sources. in this paper  we study the database selection problem for relational data sources  and propose a method that effectively summarizes the relationships between keywords in a relational database based on its structure. we develop effective ranking methods based on the keyword relationship summaries in order to select the most useful databases for a given keyword query. we have implemented our system on planetlab. in that environment we use extensive experiments with real datasets to demonstrate the effectiveness of our proposed summarization method.
categories and subject descriptors: h.1  database
management : miscellaneous
general terms: design
keywords: keyword query  summarization  database selection
1.	introduction
¡¡keyword search over structured data such as relational databases is an increasingly important capability  1  1  1  1  1  1  1   taking advantage of a combination of db
permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. to copy otherwise  to republish  to post on servers or to redistribute to lists  requires prior specific permission and/or a fee.
sigmod'1  june 1  1  beijing  china.
copyright 1 acm 1-1-1/1 ...$1.
and ir techniques. while these projects focus on keywordbased query processing in a centralized database  the increasing deployment of p1p networks and service oriented architectures has made it equally important to extend such keyword-based search capabilities to distributed databases. analogous to distributed ir systems  1  1  1  1   keywordbased database selection is a critical step towards locating useful databases for answering a keyword query  and on which existing centralized keyword search methods can be directly applied.
¡¡for effective selection of useful data sources in distributed ir systems  a common approach is to summarize document collections with a list of keywords associated with some intra-collection  e.g.  frequency  or inter-collection  e.g.  inverse collection frequency  icf    weightings. data sources are then ranked by comparing the keyword queries with their summaries  which can be stored either at the data sources or the querying clients  allowing for different tradeoffs in terms of communication cost and workload size .
¡¡summarizing a relational database with the simple keywordlist method as in ir systems is  however  inadequate for two reasons. first  relational tables in a database are typically normalized. therefore  the keyword frequency statistics  which are used in most ir-based summaries for textual documents  cannot really measure the importance of keywords in a relational database. consider the case where a keyword appears only once  and it is in a tuple that is referenced by many other tuples. such a keyword is likely to be important since it is related to many other keywords in the connected tuples. second  the results from a relational database with respect to a keyword query must take into account the number of join operations that must be done in order for all the keywords to appear in the result  often represented as an evaluation tree   1  1  1  1 . this can only be obtained if the relationship between keywords in the relational database is somehow captured in the summary.
