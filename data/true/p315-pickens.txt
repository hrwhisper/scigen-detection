we describe a new approach to information retrieval: algorithmic mediation for intentional  synchronous collaborative exploratory search. using our system  two or more users with a common information need search together  simultaneously. the collaborative system provides tools  user interfaces and  most importantly  algorithmically-mediated retrieval to focus  enhance and augment the team's search and communication activities. collaborative search outperformed post hoc merging of similarly instrumented single user runs. algorithmic mediation improved both collaborative search  allowing a team of searchers to find relevant information more efficiently and effectively   and exploratory search  allowing the searchers to find relevant information that cannot be found while working individually .
categories and subject descriptors
h.1  information search and retrieval : search process
general terms
retrieval models  interactive retrieval
keywords
collaborative search  algorithmic mediation  evaluation
1. introduction
　information seeking can be more effective as a collaboration than as a solitary activity: different people bring different perspectives  experiences  expertise  and vocabulary to the search process. a retrieval system that takes advantage of this breadth of experience should improve the quality of results obtained by its users .
permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. to copy otherwise  to republish  to post on servers or to redistribute to lists  requires prior specific permission and/or a fee.
sigir'1  july 1  1  singapore.
copyright 1 acm 1-1-1/1 ...$1.
　there are many forms of collaboration in search  such as community-based recommendation systems  or user interfaces that allow multiple people to compose queries  or examine search results . in this work we explore the possibilities of synchronous  explicit  algorithmically-mediated collaboration for search tasks . we describe a retrieval system wherein searchers  rather than collaborating implicitly with anonymous crowds  collaborate explicitly  intentionally  with each other in small  focused search teams. collaboration goes beyond the user interface: information that one team member finds is not just presented to other members  but it is used by the underlying system in realtime to improve the effectiveness of all team members while allowing each to work at their own pace.
　this is an important new direction for search collaboration that can lead to innovation in information retrieval algorithms and in user interfaces. toward this end we present an initial implementation  the first of many possible systems  integrating algorithmic mediation and intentional collaboration  and apply it to the ad hoc information retrieval task. the design comprises a set of user interfaces  a middleware layer for coordinating traffic  and an algorithmic back-end optimized for collaborative exploratory search.
　we evaluated the effect that algorithmic mediation has on collaboration and exploration effectiveness. using mediated collaboration tools  searchers found relevant documents more efficiently and effectively than when working individually  and they found relevant documents that otherwise went undiscovered.
1. background
　we distinguish several kinds of collaboration in the context of information retrieval. collaborative filtering is an example of asynchronous and implicit collaboration; aggregate crowd behavior is used to find information that previous users have already discovered . collaborative filtering for search has two weaknesses: first  there are often many documents in a collection that have received little prior user attention  reducing the likelihood that they will be retrieved; and secondly  the aggregate information need of the crowd might not match the specific needs of the current searcher s . for example  collaborative filtering algorithms in online shopping web sites may recommend products that you already have  or that are not appropriate to your climate or well-suited to your tastes.

figure 1: system architecture comparisonsthe term  collaboration  has also been used to refer to synchronous  intentionally-collaborative information seeking behavior. such systems range from multiple searchers working independently with shared user interface awareness  to multiple people sharing a single user interface and cooperatively formulating queries and evaluating results . collaborative web browsing and real-time sharing of found information  through purpose-built user interfaces rather than through email  is common in these systems . a major limitation of existing synchronous approaches is that collaboration is restricted to the user interface. searchers are automatically notified about the on-going activities of their teammates  but to take advantage of that information to improve their searches  each user must manually examine and interpret teammates' queries and found documents. while awareness of one's co-searcher s  is an important first step for collaborative retrieval  user interface-only solutions still require too much attention to others' results. in these user interface-only systems  searchers must manually reconcile and integrate their activities with their co-searcher s .
　nevertheless  the synchronous  intentional approaches mentioned above are closely related to the system described in this paper. figure 1 shows the structural differences in architecture between three user interface-only collaborative ir systems      and   and the algorithmically mediated approach. all three earlier systems use search engines that are not aware of the ongoing collaboration. as each query arrives at the engine  it is treated as a new  separate search. although searchers may collaborate at the user interface and interpersonal level  the search engine itself does not support collaboration. this is true whether each searcher uses a separate search engine  or if they share a search engine as in f＞ schl＞ar-diamondtouch . in searchtogether   a searcher's activity is not used by the underlying engine to influence the partner's actions; all influence happens in the interface or live communication channels. in contrast  an algorithmically-mediated collaborative search engine coordinates user activities throughout the session.
1. single-pass collaboration
　collaborative exploratory search is an iterative  interactive process by nature. searchers leverage each others' results as they explore a particular topic. to understand each cycle of this iterative process  we performed an experiment to characterize the effect of fusing search results from multiple searchers.
　to create our test collection  we extracted terms from the description field of trec topics 1  and ran these terms as queries to identify potential topics. we then selected all topics of moderate difficulty  precision 1 values between 1 and 1 . this yielded 1 topics  from which we randomly removed 1 to produce 1 groups of 1 topics. for each group  we generated a paper form with topic descriptions and instructions asking users to write the query they would issue to a typical search engine for the specified topics. fifteen subjects were asked to fill forms at their leisure; three queries were collected for each topic.
　we used borda count fusion  to merge different queries on the same search engine  an approach also suggested by shaw and fox   and belkin et al. . as with most fusion approaches  the goal is to increase the range of information from which relevance can be inferred.
　to simulate single-iteration collaboration among a set of users we first ran the three user queries  a  b  and c  for each topic individually. next  we fused the ranked lists two ways  ab  ac  bc  and three ways  abc . for each condition we computed the average recall and precision scores  as shown in table 1. in line with shaw and fox  and shah et al.   these results show that query fusion led to improved performance and that more formulations of an information need led to further improvements. this suggests that although ranked list fusion is not the only possible foundation for collaborative algorithms  it is a reasonable starting point.
1. iterative collaboration
　while borda fusion of query results showed good performance  by itself this algorithm cannot be used effectively in an iterative setting  because both searchers would need to issue their queries at the same time  to finish browsing their results lists at the same time  and then to issue the next query at the same time. this is the inherent limitation faced by user interface-only architectures  such as the

indiv1-way%chg1-way%chgaverage precision  non-interpolated 111precision:at 1:11+11+1at 1:11+11at 1:111at 1:111at 1:111at 1:111at 1:11+11at 1:111at 1:111table 1: precision for single-query runs vs. precision for 1-way and 1-way fused runs.  indicates t-test significance at p   1.
f＞ schl＞ar-diamondtouch system  and the searchtogether system  used in split mode.
　an algorithmically-mediated collaboration framework should allow people to work at their own pace but still be influenced in real-time by their partners' search activities. influence should be synchronized  but workflow should not. if one user decides to issue a new query  the second user should not be interrupted in his or her activity. at the same time  the second user should start to see the influence of the first user's new search activity when the second user makes a request to the collaborative back-end  and vice versa.
　to test our ideas about algorithmic mediation for collaborative exploratory search  we implemented a proof of concept system built for video search. the design of the system was based partially on lessons learned from best-of-breed instances of video search interfaces   and partially from observations and studies we performed as part of the design process. we chose the trecvid search task partly because it provides an interesting complex search task involving several modalities  text  image  and concept similarity  and partly to leverage existing experience  e.g. the mediamagic interface  described below  within our laboratory.
　while the system was built for the 1 trecvid interactive video search track  we emphasize that the underlying mediation algorithms supporting this task are generic and may be applied to all types of retrieval: text  video  images  music  etc. our search engine  based on adcock et al.   algorithmically mediates a wide variety of queries  including text queries  fuzzy text queries  text-based latent sematic concept expansion   image similarity queries based on color histograms  and image-based concept similarity  via statistical inference on semantic concepts of images.
　in this section we will describe how the system combines multiple iterations from multiple users during a single search session. the system consists of three parts:  1  user interfaces that implement the roles   1  the architecture to support these roles  and  1  algorithms used to perform collaborative search.
1 search roles
　the synchronous and intentional nature of the collaboration enables searcher specialization according to roles and/or tasks. many roles and associated task types are possible; these may shift over time or during different parts of the search task. roles may be equal  hierarchical  partitioned

figure 1: collaborative system architecture
 separated by function   or some combination thereof. user interfaces  tools  and algorithms may offer commands or perform actions specific to particular roles.
　our current system allows collaborating users to assume the complementary roles we dubbed prospector and miner. the prospector opens new fields for exploration into a data collection  while the miner ensures that rich veins of information are explored. these roles are supported by two different user interfaces and by underlying algorithms that connect the interfaces. unlike approaches in which roles are supported manually or only in the user interface   these roles are built into the structure of the retrieval system. the regulator layer  described below  manages roles by invoking appropriate methods in the algorithmic layer  and routing the results to the appropriate client.
1 system architecture
　the system architecture consists of three parts: the user interface layer  the regulator layer  and the algorithmic layer  figure 1 . system components communicate through a web service api  and can be combined in different ways: the single shared display in a co-located setting can be replaced by separate displays in remote locations  showing the same information.
1.1 user interface layer
　our system contains three user interfaces:  1  a rich query user interface  mediamagic  1  1   for use of the prospector   1  a rapid serial visualization result browsing user interface  rsvp  for use of the miner  and  1  a shared display containing information relevant to the progress of the search session as a whole.
　the mediamagic user interface contains tools for issuing queries  text  latent semantic text  image histogram  and concept queries   displays ranked results lists and has an area for viewing and judging retrieved shots. the rsvp user interface is primarily designed for relevance assessment of video shots  which are presented in a rapid but controllable sequence. however  the rsvp user interface also includes the capability for miners to interrupt the flow of shots to issue their own text queries.
　finally  a shared display shows continually-updating information about issued queries  all shots marked as relevant by either user  and system-suggested query terms based on activities of both users. in our setting  the shared display was shown on a large screen easily viewed by both the prospector and the miner  figure 1  top center .
1.1 regulator layer
　the regulator layer consists of an input regulator and an output regulator. the input regulator is responsible for capturing and storing searcher activities  such as queries and relevance judgments. it contains coordination rules that call the appropriate algorithmic collaboration functions. the input regulator implements policies that define the collaborative roles. similarly  the output regulator accepts information from the algorithmic layer and routes it to appropriate clients based on their roles. the regulator works autonomously  and does not interact directly with users.
1.1 algorithmic layer
　the algorithmic layer consists of a number of functions for combining searchers' activities to produce documents 

figure 1: a collaborative search session. each user's ui is suited to their role: prospector  left  and miner  right . large side screens show sample relevant shots for the current topic; center screen shows the shared query state.
rankings  query suggestions  and other information relevant to the search. it performs basic searches  and generates raw search results  transformed search results based on input from multiple users  and query terms that characterize the current state of the collaboration. details of these algorithms are discussed in the following section.
1 algorithmic mediation
　in section 1 we described a single-pass algorithm for merging ranked lists; in this section  we extend the approach to support iterative use. we define two weighting variables  relevance wr lk  and freshness wf lk . these are functions of a lk  a ranked list of documents retrieved by query k.
wf lk  = | （ |  1  unseen lk
|seen （ lk|
		 1 
|
　the query freshness weight wf is given by the ratio of unseen  retrieved by the engine  but not yet manually examined  to seen  retrieved and manually examined  documents in lk. the query relevance weight wr is given by the fraction of seen documents that were judged relevant for that query. these two factors are designed to counterbalance each other. if a query retrieved many relevant documents  it should have a high relevance weight  but once most of the documents from a query have been examined  other queries should have higher priority given by the freshness weight. these weights are updated continuously based on searchers' queries and judgments of relevance. the weights are then used to affect the information shown to each searcher  as appropriate to their roles.
1.1 miner algorithm
　as mentioned in section 1  the rsvp client acts in the role of miner. the regulator accumulates documents retrieved by all team members during a session. documents not yet examined by the prospector are queued for the miner based on freshness and relevance weights. the queue is ordered by a score that uses borda fusion to merge the contributions of all queries  as shown in equation 1.
	score d 	= x wr lk wf lk borda d lk 	 1 
lk（{l}
　the prospector continually adds new ranked lists lk to the set l  and views and judges documents. meanwhile  the miner judges highly-ranked unseen documents d. these documents are likely to have appeared in more than one list lk; therefore  relevance judgments made on these documents affect the wf and wr weights of more than one list and further change overall priorities. the miner does not have to manually decide which documents to comb through  nor does the prospector have to decide which documents to feed to the miner.
　the miner algorithm is similar to the on-line hedge algorithm for ranked list fusion . both approaches share the intuition that attention should shift to those lists that show themselves to be more  trustworthy.  in our work  however  the ranked lists being combined are from different queries  rather than from different search engines. furthermore  the number of ranked lists is not static. as both users issue queries  the number of rank lists grows over time.
1.1 prospector algorithm
　the previous section describes how algorithmic mediation allows the miner to work with the prospector. but how does the prospector algorithmically influence the miner  the unseen documents priority score in equation 1 only affects the ordering of documents for the miner. we chose not to apply the same transformation to the prospector's search results because we wanted the prospector to see the raw effectiveness of each query. if previously retrieved but unseen documents were retrieved again by a new query  that would boost their priorities in the miner's queue; those documents would likely soon receive attention by the miner rather than the prospector.
　we choose to let the prospector focus on coming up with new avenues for exploration into the collection. this is accomplished by a real-time query term suggestion feed from which the prospector can get a sense of how the overall search is progressing and draw ideas about new avenues to explore. the basic idea is similar to the miner algorithm. however  instead of a borda count on unseen documents d  we use a  ranked list frequency  count on terms t: rlf  t lk . this is defined as the number of documents in lk in which t is found. using rlf   we define a score for every term  t:
	score t 	= x wr lk wf lk rlf  t lk 	 1 
lk（{l}
　this function updates continuously. terms used in previous queries are filtered out to produce a list of top ten terms that are shown on the shared display. as the miner's activity affects the wr and wf weights  the system re-orders or replaces term suggestions. the more the miner digs into fresher and more relevant pathways  the more terms associated with those pathways appear. once a particular avenue loses freshness or does not exhibit relevance and the miner switches from that path  the automatically-suggested terms switch accordingly. no explicit actions are required for the miner to suggest terms to the prospector  just as no explicit actions are required from the prospector to feed documents to the miner; the collaborative retrieval algorithm handles the flow of information between the users. the miner and prospector are self-paced in their respective workflows  but the influence that each exerts on the other is synchronous.
1. experimental evaluation
　we conducted an experiment to evaluate our collaborative exploratory search system. this experiment was conducted within the framework specified by nist's 1 trecvid interactive track. we hypothesized that collaborative search would produce better results than post hoc merging  see the baeza-yates  architecture in figure 1  with respect to average precision and average recall. we also discovered that collaborating users found more unique relevant documents. a thorough investigation of the effects of collaborative system roles on search performance is beyond the scope of this paper; for now we only compare the end effects of two-person collaboration against two-person post hoc results merging. section 1 suggests a few directions that additional role analyses might take.
1 method
　we used a mixed-design experimental method  where teams of searchers performed one of two search conditions  merged or collaborative ; all 1 trecvid interactive retrieval topics were used in both conditions. in total  eight people participated in the experiment. all are researchers in our lab  but only half of them conduct research related to information retrieval. the experiment was run during regular work hours and the participants did not receive additional compensation for their participation. no participants had prior experience with the topics on which they searched. in both conditions teams had 1 minutes to complete a topic; each condition consisted of two team members working for 1 minutes  for a total of 1 person-minutes per topic.
　the teams in the collaborative condition consisted of two co-located participants with different levels of experience in multimedia information retrieval; one had prior experience  exp  and one did not  nex . the exp used the mediamagic client  while the nex used the rsvp client. prior to the runs  both team members received training on their respective user interfaces  general instruction on their expected roles  and how the system implemented each role. verbal and non-verbal communication between participants was not controlled; participants were free to discuss the topic as necessary. each exp user worked and equal amount with each nex user; switching team members balanced the influence of individual differences on team performance. although it would be interesting to explore role interaction effects  we did not have enough subjects to pursue that analysis.
　the merged condition consisted of post hoc unions of pairs of search runs with no interaction or algorithmic mediation. this condition mirrored the collaborative condition in terms of the composition of the teams: each topic was completed by a team with one exp and one nex user  using the same amount of overall time. all team members received training on  and used  the mediamagic client. teams were also swapped to balance individual influences.
　in both conditions the same underlying indices and similarity functions were used. the primary difference was that the interfaces in the post hoc merged condition were connected to the stand-alone retrieval engine  whereas in the collaborative condition the interfaces were connected to the algorithmically-mediated collaborative engine.
1.1 relevance judgments
　the collaborative condition was originally designed for the trecvid 1 competition; its results were submitted to the nist relevance judgment pool. however  the post hoc merging runs were completed later. in these later runs  individual searchers selected a small number of documents that had not been found by any other search system and therefore had not been judged by nist. in order to avoid incorrectly penalizing these latter runs through incomplete ground truth  four judges independently assessed documents unique to the merged condition for topical relevance. disagreements among judges were resolved in a joint judging session. in all  1 relevant documents were added to the ground truth1 through this process.
1.1 ranked list padding
　during a 1 minute interactive run  searchers manually select only a limited number of documents  far below the allowed trecvid submission limit of 1. it is therefore common to do a last-second relevance feedback run to fill the final results list. however  we believe the results from this procedure do not reflect true interactive performance. therefore  while we performed this step as part of our competition submission  for the analysis in this paper we only include manually identified documents.
1.1 metrics
　in evaluating the effectiveness of interactive search  we need to distinguish between documents returned by the search engine  documents actually seen by the user  and documents selected by the user . thus  we use viewed precision  pv  the fraction of documents seen by the user that were relevant   selected precision  ps  the fraction of documents judged relevant by the user that were marked relevant in the ground truth   and selected recall  rs  as our dependent measures.
1 results
　we wanted to test the hypothesis that mediated collaboration offers more effective searching than post hoc merging of independently produced results  as was done  for example by baeza-yates et al. .
1.1 collaboration
　to assess the teams' performance  we removed duplicate documents from the merged result set  and kept track of which documents each person saw  whether they judged them or not . participants in the merged condition saw an average of 1 distinct documents per topic  both relevant and non-relevant ; participants in the collaborative condition saw an average of 1 distinct documents per topic. for each topic  we subtracted the merged score from the collaborative score and divided by the merged score. we also split runs up over time  1  1  1 and 1 minutes .
　we found that collaborative search consistently outperformed merged search on our metrics as shown in table 1

1
1 new documents for topic 1  1 for topic 1  1 for 1 
1 for 1  and 1 for 1; the total went from 1 to 1 and in figure 1. for example  at the end of the 1 minute session  r．s was 1% higher for collaborative search than for merged results. collaborative search exhibited better performance throughout the session.
1 min1 min1 min1 minavg%chgavg%chgavg%chgavg%chgp．soverall+1+1+1+1plentiful-1+1+1+1sparse+1+1+1+1r．soverall+1+1+1+1plentiful+1+1+1-1sparse+1+1+1+1p．voverall+1+1+1+1plentiful+1+1+1-1sparse+1+1+1+1table 1: average percent improvement of collaborative over merged  at various time points

　overall results of the experiment indicate a consistent advantage for collaborative search over merged results from independent single-user searches. we wanted to understand the differences in more detail  and thus looked at the effect that the number of relevant documents for a topic had on our results. we divided the 1 topics into two groups based on the total number of relevant documents available for that topic. topics that fell below the median  1  were deemed  sparse   average of 1 relevant documents per topic  and those above were  plentiful   average of 1 relevant documents per topic .
　for  sparse  topics  users in the merged condition saw on average 1 unique documents vs. 1 in the collaborative condition; for  plentiful  topics  users in the merged condition saw on average 1 documents vs. 1 for the collaborative condition. we then repeated our analysis on the two groups independently; results are shown in table 1  and compared in figure 1.
　we now see that for plentiful topics  collaborative search is comparable to merging individual results: the white bars in figure 1 are small  and the error bars span 1. if relevant documents are abundant  anybody can find them! when the topics are not so obvious  however  collaborative search produces dramatically better results on average. the gray bars are consistently above 1 and are consistently larger in magnitude than the solid  overall  bars. for viewed precision  pv  in particular  we saw an increase of over 1% compared to the merged condition  despite the fact that participants in the merged condition saw 1 more documents overall than in the collaborative condition. a repeated-measures anova of pv confirmed that this interaction between time and topic sparsity  f 1  = 1  p   1  was significant  indicating that improvements over the course of a session were unlikely to be due to chance.
　although we did not design the experiment to quantitatively measure the effect of oral communication between team members  we analyzed the video record of experiments to assess the degree to which non-mediated communication channels  e.g. gaze  were used by our participants. we found that the miner spent on average 1 seconds  sd=1  of a 1 minute session looking at the prospector's screen  while the prospector spent 1 seconds  sd=1  looking at the miner's screen. given that the system's algorithmic mediation  not the prospector  determined the documents and their order of presentation to the miner  and given that miner found on average 1% of the relevant documents  it is unlikely that non-algorithmic channels played a large part in the overall team performance.
　these results suggest that algorithmically-mediated collaborative teams were much more efficient than people working individually at detecting relevant documents.
1.1 exploration
　in addition to effectiveness  we wanted to see how well exploration was supported by algorithmic mediation. we wanted to assess the comparative effectiveness of collaborative versus post hoc merged search in finding unique relevant documents  documents that only one system was able to find. while some retrieval tasks are considered a success if any relevant document is found  sometimes it is appropriate to examine which relevant documents are found.
head-to-head comparisons between two systems for unique-
ness are problematic. without an external baseline  uniqueness is equivalent to the difference in the number of relevant documents retrieved. thus we chose to use the data submitted by the 1 other trecvid participants as the baseline.
　if two interactive runs are based on the same low-level indexing and retrieval code  they will likely retrieve similar documents because of those shared retrieval mechanisms. each trecvid group was allowed to submit several runs  all of which were used by nist to determine relevant documents. some of these runs were produced by parametric variation and retrieved many of the same documents. therefore  to get a more accurate count of unique documents  we kept only the best-performing  in terms of map  run from each group. this gave us a  background  set of 1 runs  the union of which served as our baseline.
　our two runs  collaborative and post hoc merged  are also based on the same low-level indices and document similarity functions. therefore  we compare each condition separately against the baseline. we first evaluate the collaborative system against the baseline by computing for each topic nu the number of unique relevant documents identified by each of the 1 systems: 1 collaborative and 1 background systems. we also compute fu  the number of unique relevant documents as a fraction of the number of relevant documents found by a system. we repeated the analysis using the merged run results.
　the 1 trecvid competition for ad hoc search consisted of 1 topics  1 ; the number of relevant documents varied greatly among the topics  range =  1   x． = 1  median = 1  σ = 1 for the original trecvid data  range =  1   ．x = 1  median = 1  σ = 1 for the augmented ground truth . this large variability made it problematic to average performance across topics  so for each topic  we ranked the scores  nu and fu  of the various runs  and averaged ranks rather than the raw scores across topics. finally  we compared the average ranks we obtained from the merged runs with the collaborative runs  as shown in the rightmost columns of table 1.

figure 1: plentiful/sparse split: selected precision  selected recall  viewed precision. error bars represent　we were also interested in the temporal profile of our sessions with respect to finding unique documents. did people find unique relevant documents after they found documents found by other systems  or were they sprinkled throughout the session  for this analysis  we again used the other ＼1 standard error.
groups' data as a baseline  but rather than comparing our complete runs  we used subsets of our data collected through 1  1 and 1 minutes of a 1 minute session. we compared our fractional data to the full data of other systems because we were not interested in comparing directly against other systems  but in comparing between the collaborative and merged systems. the baseline data served as background  as a relatively unbiased estimate of easy to discover documents that were relevant to each topic. given that baseline  how do our two systems compare when finding new unique documents 
　as before  we performed the analysis on all topics  and then by topic size  plentiful/sparse . the results are summarized in table 1. the data for overall uniqueness show a slight advantage for collaborative search at the end of the 1 minute session  a rank improvement of 1%   but that is a small gain. when we split the topics by sparsity  however  a different pictures emerges. for plentiful topics  there is no effective gain for the collaborative system  a rank improvement of 1%   whereas for the sparse topics there is a 1% uniqueness rank improvement.
　over time  there appears to be no strong trend for either metric either overall or for plentiful topics  whereas for sparse topics  improvements accrue quickly  and then reduce a bit at the end. this suggests that collaborative search teams find more unique relevant documents than merged results from individual searchers  that the advantage is greater for difficult topics  and that for those topics  there is more advantage earlier in the search session than later.
　as with recall and precision measures discussed in the previous section  these results suggest that mediated collaboration is more effective when the search topics are sparse. while a more principled exploration of the effect of topic difficulty on system performance is warranted  the trend is encouraging.
1. future work
　the work described in this paper represents some initial steps in exploring the design space of algorithmicallymediated information retrieval collaboration. while our initial results are encouraging  much remains to be explored. we are pursuing several broad directions  including understanding the range of roles and the sorts of algorithms and interfaces that support them. we are also looking at the relative contributions of team members in terms of roles and how best to allocate scarce human resources.
1 roles and interfaces
　roles are a critical part of our system: they inform the design of user interfaces  and determine the algorithms that the regulator and back end use to retrieve and represent search results. our initial implementation focused on the roles of prospector and miner  but other roles and associated algorithms and interfaces may also be useful.
1 evaluation of role relationships
　we observed that the collaborative system resulted in better performance than post hoc merged results of independent searches. but what exactly contributed to these improvements  did the team find more relevant documents because the miner to dug deeper and found them  or was the miner able to dig deeper  because some of the nuggets the miner found allowed the prospector to ask better questions  or did the prospector explore more because he or she knew that the miner would find what he missed  these are important questions for future system design  and they may require additional experiments to answer definitively.
　another possible analysis involves determining the optimal size of a team. we ran pairs of participants; would adding a second miner or prospector improve the results  would it improve the results compared to merging three independent runs  are there situations in which a person is better off working alone  or having an asymmetric relationship with other roles  e.g. are there times when a prospector's explorations should not affect the miner's work  
1 algorithms
　our experiments were conducted on trecvid data; the task was to find video shots that matched the given topic description. the data were indexed in a variety of ways: text  lsa text  image histogram  and image inferred-concept. our initial collaboration algorithms therefore focused on a method that could handle queries and results across this wide variety of data types: results list fusion. future work will explore possibilities that arise by restricting the search to a single data type  i.e. text-only or image-only. in those narrower situations it should be possible to create collaboration algorithms based on the intrinsic content of the infor-
1 minutes1 minutes1 minutes1 minutesmergecollab%chgmergecollab%chgmergecollab%chgmergecollab%chgaveragerank of nuoverall11+111+111+111+1plentiful11+111111-111+1sparse11+111+111+111+1averagerank of fuoverall11-111+111-111+1plentiful11-111-111-1111sparse11+111+111+111+1table 1: average ranks for uniqueness measures. smaller scores represent better performance. the  %chg  column represents the percent improvement  decrease in average rank  of collaborative over merged.
mation being queried and retrieved. for example  instead of the miner digging through the best unseen documents that result from a prospector's query stream  the miner might instead see a continually-updating variety of semantic facets. the prospector might not even be aware that a certain untapped  potentially relevant facet is accruing in his or her retrieval activities. but a collaborative algorithm might analyze the unseen content and surface those facets to the miner  synchronously.
1. conclusion
　we designed  built  and evaluated a system that mediates search for a focused team of searchers. our evaluation showed that this instantiation of mediated collaboration improved selected precision  selected recall  viewed precision  and the number of unique relevant documents found compared with naive merging of search results obtained independently by two searchers. although different media types may require different user interfaces to elicit queries and to display results  the underlying mediation need not change because this particular mediation algorithm  supporting these roles  is content-domain independent.
　this paper described a system that is one possible instantiation of a more general concept. numerous challenges remain  including designing and comparing different realtime merging strategies for query results  defining additional roles  better understanding the tradeoffs between parallel and synchronized work  and designing appropriate user interfaces. overall  we are confident that these first steps will lead to a fruitful research field  success in which will rely on the combined efforts of ir and hci researchers.
　this paper opens a novel area for information retrieval in that a user is interacting not only with a human partner  but with a search engine that is also interacting with the same partner  algorithmically taking into account that partner's actions to fulfill a shared information need. these streams of information  computer retrieval plus partner search activity  are combined algorithmically in real time; they alter and influence each other. how these intertwined streams are presented to each partner  and what effect that has on retrieval effectiveness of the system  is a challenging and fruitful open question  one with considerable practical and research value.
1. acknowledgements
　we would like to thank lisa anthony for numerous contributions to both design and system code  and sagar gattepally and john adcock for frameworks and improvements to the code.
