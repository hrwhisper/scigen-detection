in this paper  we describe mysearchview - a system for assembling search engines into metasearch engines. with this system  any user can create a metasearch engine by simply letting the system know the urls of the search engines the user wants to be included and the metasearch engine will be built fully automatically. in this paper  the main steps of building metasearch engines will be sketched. we will also outline our plan to demonstrate all the features of mysearchview. 
categories and subject descriptors 
h.1  information storage and retrieval : information search and retrieval - retrieval model  search process. 
general terms 
management  measurement  performance  design. 
keywords 
metasearch engine  customization  wrapper generation  result merging. 
1. introduction 
a metasearch engine is a system that supports unified access to multiple existing search engines . metasearch engines have several advantages over regular search engines such as its ability to combine the search coverage of multiple search engines  its ability to reach the deep web  and its ability to obtain more relevant and more up-to-date results . building a high quality metasearch engine is a non-trivial process as it requires the developer to have deep understanding of several technologies. 
1. customized metasearch engine 
a customized metasearch engine is a metasearch engine that is tailored to the needs of a particular user or a particular group of users. each metasearch engine is built on top of a set of existing search engines. in this paper  metasearch engine customization mostly means that we allow a user to choose the search engines for each of his/her metasearch engines. 
we use two examples to illustrate how a customized metasearch engine may help satisfy the special search needs of a user. 
 
copyright is held by the author/owner s . 
sigmod'1  june 1  1  beijing  china. acm  1-1-1/1. 
 
 
example 1. jack is a picker of sports news for a newspaper's sports section. jack has identified about twenty sports sites on the web and he visits these sites every day to check if there are interesting sports stories to include for the newspaper. on each of these sports sites  one can find the news articles by submitting queries to the site search engine. if a metasearch engine can be built on top of the search engines of the twenty sports sites just for jack  he would be able to spend significantly less time to gather his sports news everyday. furthermore  the result-merging algorithm of the metasearch engine can help identify more significant news items by identifying those results that appear in the result lists of multiple local search engines. research in information retrieval has shown that results that are returned by multiple approaches/systems are more likely to be relevant . 
example 1. bill reads news on the internet. due to his strong political orientation  he only reads news and commentaries from certain newspapers that fit his tastes and politics. as a result  he does not use popular news search engines to find news articles to read because he hates to see articles from some undesirable sites and he does not want to go through a long list of results to find the articles from his desired sites. a dedicated metasearch engine that just connects to bill's desirable news search engines can solve bill's problem. 
the above examples show that ordinary people from different walks of life can benefit from metasearch engines that are specifically built for their special search needs. in general  a customized metasearch engine can save users valuable time in search and can allow a user to search only trusted sources.  
most web users do not have the expertise  e.g.  programming skill  knowledge about html and http  to build a metasearch engine by themselves and hiring experts to build these metasearch engines can be very expensive. 
1. mysearchview 
mysearchview is a tool that can automate the construction of metasearch engines. any person who knows how to use search engines and knows what urls are can create a metasearch engine using this tool. in this section  we describe how to use mysearchview to create and manage metasearch engines from a user's perspective. 
1 metasearch engine creation 
from a pull-down menu on the gui of mysearchview  the user selects the  create new mse  to start the metasearch engine creation screen  see figure 1 . 
from this interface  the user can give a name to the metasearch engine he/she is about to create. the textbox labeled url is for the user to enter the url of a search engine. suppose the url of the search engine is www.yahoo.com. the user can either type in this url or cut-and-paste it from the yahoo homepage. by clicking the  add to basket  button  this search engine is moved to  your search engine basket . the user can repeat this process to enter more search engines for this metasearch engine. once all of the desired search engine urls are entered  the user can select one of the following two optional ways to display the search results. 
1. merge: with this option  for each user query submitted to this metasearch engine  the results returned from different search engines will be merged and the merged results will be displayed to the user. this is the default option. see section 1 for more information about the merging algorithm.  
1. non-merge: with this option  the search results from different search engines will be displayed separately. in addition  the number of hits for the user query will be displayed for each search engine. 

figure 1. metasearch engine creation interface 
next  the user selects the number of results to be displayed on each result page of the metasearch engine from several options  1  1  1  1; 1 is the default .  
after all the options are selected  the user can click the  build  button to start the creation of the metasearch engine.  
note that there is no guarantee that every search engine the user entered can be successfully incorporated into the metasearch engine. among the reasons that may cause failure include: the entered url is not valid  the web page with the url does not contain a search engine form  the search engine is down  and so on. for each search engine url  mysearchview displays to the user whether or not the search engine is successfully incorporated. it takes an approximately one minute to incorporate each search engine. 
a user may create multiple metasearch engines and specify one for them as the default  the one that is displayed after logging in . 
1 metasearch engine modification 
mysearchview allows a user to modify any of his/her metasearch engines. figure 1 shows the interface for metasearch engine modification. a user may change a metasearch engine in various ways: change its name  change the result display mode  change the number of results on a result page  remove one or more search engines  and add new search engines. 
 

figure 1. metasearch engine update interface  
1. techniques behind the scene 
while it is fairly easy to use mysearchview to create metasearch engines automatically  the techniques that power it are quite complex. due to limited space  we can only outline the technical challenges and provide a brief summary of the techniques here. 
there are three main technical challenges: 
1. automatic search engine connection. this is to automatically create a program that can interact with the server of any given search engine  in both sending queries and receiving returned result pages. to achieve this  the web page with the given url needs to be parsed and the search form of the search engine needs to be analyzed to identify and extract all the information that enables automatic connection. in the simplest case  the name of the search engine server and its path can be identified from the  action  attribute of the form tag  the http request method  either get or post  supported by the search engine can be obtained from the  method  attribute  and the query name that will hold the query string can be obtained from the  name  attribute. with these three pieces of information  a connection program can be generated automatically. many difficulties may arise when dealing with more complex web pages and some of them are: how to differentiate search forms from non-search forms  how to deal with multiple search forms on a single page  how to deal redirection  etc. some of these issues were discussed in  1  1 . 
1. automatic search result extraction. when a result page is returned from a search engine  the search result records  srrs  need to be extracted and other irrelevant information such as advertisements need to be discarded. each srr corresponds to a retrieved web page. a typical srr consists of a title  a snippet  and a link to the web page. the challenge is to automatically generate the rules  wrapper  to extract the srrs from the returned result pages of any given search engine. mysearchview employs the vints system  to generate the wrapper automatically. vints generates the wrapper for a search engine using several sample result pages that are automatically collected from the search engine using automatically generated sample queries and the search engine connection mechanism identified above. each sample result page will be rendered and its dom tree will be generated so that its visual information  such as location of each node  and tag structure can be utilized to induce the record extraction wrapper for the page. the wrappers obtained based on different result pages from the same search engine may be somewhat different due to the possible variations of the displayed records. for example  google displays some records un-indented while some indented. so it is possible that one sample result page has only un-indented srrs while another sample result page has both indented and un-indented srrs. the wrappers obtained based on result pages are then integrated to produce a robust wrapper. please see  for more details about vints. 
1. result merging. if a user submits a query to a metasearch engine that has the  merge  display mode  the results  i.e.  srrs  returned from different search engines need to be merged. the quality of the merging algorithm employed by a metasearch engine probably has the most direct impact on the effectiveness of the metasearch engine. many result-merging algorithms have been proposed  e.g.   . the merging algorithm employed by mysearchview is adopted  with revision  from a proprietary algorithm developed by webscalers for its allinonenews news metasearch engine  www.allinonenews.com . basically  this algorithm compares the user query with the title and snippet contained in each srr and how well they match determines the rank of the srr.  
1. demo plan 
we plan to demonstrate the entire process of creating and modifying metasearch engines. to allow users to truly appreciate the system  real search engines will be used. during the demo  we will try to engage the visitor s  in an interactive mode. for example  we will invite the visitor s  to provide the search engines and to make the choices on the result display mode and the number of results to display on each page. while the metasearch engine is being created  it takes a few minutes   we will explain the issues of automatic search engine connection and automatic wrapper generation. once a metasearch engine is created  we will invite the visitor s  to try it with their own queries. we will explain approximately how the result-merging algorithm works while viewing the search results. then we will invite the visitor s  to modify the metasearch engine and see how the modification takes effect. 
1. related work 
we first note that mysearchview is not a metasearch engine but an automatic metasearch engine generation system. we are not aware of any similar tools. 
result merging has always been a critical component of metasearch engines and it has received extensive study  e.g.   1  1  1  . in the earlier days  merging algorithms were based on aggregating the local ranking scores and local ranks of the retrieved results. in recent years  as most search engines return the titles and snippets of the retrieved documents  more and more merging algorithms  including the one employed by mysearchview  utilize such information  1  1  1 . 
 
in the past  wrappers used to extract desired information from web sites were mostly generated manually or semi-automatically. in recent years  automatic wrapper generation techniques have received a lot of attention  e.g.   1  1  1  . vints is the first wrapper generation system that utilizes both visual contents and tag information for wrapper generation and it is also one of the most accurate. vints has been used to produce thousands of wrappers for many metasearch engines. 
a previous version of the system was demonstrated at the acm sigir conference in 1 . mysearchview is significantly different from the previous version. the search engine connection component has been largely improved. the wrapper generation component and result-merging component are completely new. options such as the merging mode and the number of results to display on each result pages were not available in the previous version. finally  the interface of mysearchview is completely redesigned to improve ease of use. 
1. acknowledgments 
this work is support in part by the following grants from nsf: sbir grants  phase i: dmi-1 and phase ii: dmi-1 ; and research grants: iis-1  iis-1  iis-1  iis1  and cns-1. 
