we present x.qui.site  a scalable system for managing recommendations for social tagging sites like del.icio.us. seamlessly incorporates various user behaviors into the recommendations and aims to recommend not only items of interest  but also other relevant information like interesting people and/or topics. explanations are also provided so that users can obtain a better understanding of the recommendations and decide which recommendations to pursue further. we discuss the technical challenges involved in characterizing different user behaviors and in efficiently computing recommendation explanations.
categories and subject descriptors
h.1  information systems applications : miscellaneous
general terms
algorithms
keywords
tagging  collaborative filtering
1. motivation
　the recent advent of  web 1   i.e.  the evolution of the web from a technology platform to a social milieu  has been accompanied by an explosion in the number and reach of social content sites such as social tagging sites. a typical example of such sites is yahoo!'s del.icio.us  which enables users to tag urls that are of interest  create a network of friends  and subscribe to their friends' feeds to learn about what urls they have been tagging recently. with the increasing popularity of del.icio.us  we have seen an explosion of urls in the system. and to help users navigate this large number of urls  del.icio.us provides hotlists1. however  sifting through the large amounts of urls and finding the right urls to recommend to the user is still a challenging task facing del.icio.us  as well as many other similar sites  e.g.  yahoo! movies  citeulike  etc. .
　urls  however  are just part of the story. increasingly  users of del.icio.us want to become connected with people
who are not necessarily their friends but are nonetheless interesting to them  or topics that they have never been exposed to but are potentially of interest to them. combined with url recommendations  the mission statement has become finding the right information to recommend to the user  where information can be urls  people  or topics  as represented by the tags .
　furthermore  users of del.icio.us can have very different behaviors depending on how they are using the system. on one end of the spectrum  there are users who use del.icio.us as a personal bookmarking tool where they tag urls but don't necessarily share those urls with the public or their friends  some don't even have any friend . on the other end  there are users who use del.icio.us as a discovery tool  where they establish a large network of friends and frequently explore the urls that their friends have been tagging; but they themselves only tag very few urls. such diverse user behaviors present another challenge: identifying the right recommendation strategy based on the right information about the user.
　the richness of information within social tagging sites presents a unique opportunity for the design of semanticallyenriched recommender systems. we propose to demonstrate x.qui.site  a system which gracefully incorporates user behavior into recommendations. to the best of our knowledge  x.qui.site is the first system which captures users behavior and is able to recommend general information like topics and people  in addition to urls. x.qui.site is designed as a platform to incorporate multiple recommendation strategies depending on the user behavior and is based on a variety of methods for producing customized hotlists.
　moreover  x.qui.site provides a summarized trace of recommendations  thereby explaining their provenance. for example  when a new url is recommended to a user  it can be because many friends of the user are tagging it or it can be because it is related to some tags that the user previously used. at the user's request  such information will be provided to the user so she can make her own judgement of how interesting the recommendation is to her.
x.qui.site is implemented as an external module of del.icio.us
and runs on a replica of the production del.icio.us datasets with nightly synchronization. the scalability of the system relies on two efficient algorithms: the network generation
algorithm and the explanation computation algorithm.
　sec. 1 contains a technical description of our recommendation methods and algorithms and sec. 1 provides an overview of the demo.
1. technical contributions
　at its core  a recommendation method is defined by three components:  i  the recommendation results  i.e.  what information is being recommended;  ii  the context of the recommendation  which is characterized by a seed set used to draw recommendations from  and the current user's interest; and finally   iii  the strategy  i.e.  how recommendations are computed from the context. we investigate these components and argue for different recommendation strategies and recommendations depending on the context.
1 recommendation results
　the richness of actions in social tagging sites  e.g.  forming social ties with other users and choosing tags to describe urls  provides the ability to think of recommendations along different axes. in other terms  users are no longer limited to getting recommendations of items such as bookmarked urls. instead  they can now explore people and topics as well.
　searching for people of interest to a user is a frequently requested feature. indeed  while users in del.icio.us can define explicit social ties to form their friendship network  they have little help in creating new social ties. in x.qui.site  we propose to derive interest networks  including both topicbased network and url-based network  and use them to recommend people of potential interest to users.
　similarly  users of del.icio.us are always looking for new and relevant topics to explore. in x.qui.site  we achieve this topic recommendation by recommending interesting tags to the user based on her explicit and derived networks.
　these recommendations are in fact intertwined. recommended people can help a user find out more about the latest urls that are relevant to her specific topic of interest  while recommended topics  i.e.  tags  can help her discover other interesting urls and people.
1 recommendation context
　regardless of what information are being recommended  a recommendation is always produced in a certain context. this context may include a variety of information: some that is specific to the user  e.g.  the user's network of friends  and some that is global  e.g.  the most active group of users for a certain topic . the common piece of context  however  is the seed set: the set of users whose behavior is used to generate recommendations for a given user. this seed set of users may or may not depend on the user to whom the recommendation is being served.
　the simplest recommendation strategy is based on modeling the seed set as all users in del.icio.us. as a result  the same seed set is used regardless of the user seeking recommendations. alternatively  a seed set could be composed of a user's explicit social ties  i.e.  friendship network   in which case the seed set is often different for different users. in addition to explicit seed sets  there are ones that can be derived based on common behavior between users. there are two basic approaches: using shared topics  i.e.  tags  and using shared urls. in the first approach  the set of tags associated with a given user is used to derive a seed set composed of all users who share a significant number of the tags with the user. for instance  if many of the users' tags include the word sports  the user is likely to be interested in sports-related information  and we compute a seed set of people who are interested in sports. this richer computation helps refine the recommendations by identifying information related to the user's interest  thereby customizing recommendations to individual users  or groups of users who share their most popular tags . in the second approach  the system considers overlap in tagged urls between different users. each user's seed set is defined as the set of all the other users who bookmarked a large fraction of the user's urls. in addition to those two basic approaches  the system also combines the topic-based approach and the url-based approach to define a richer seed set formed by the people who share the user's tags and urls.
1 recommendation strategies
　when the recommendation results are urls  a recommendation strategy defines the normalized score of a recommended url as the percentage of people in the seed set who bookmarked the url  also referred to as url popularity . when the recommendation results are people  the score of a recommended user is the strength of connection  as measured by the extent of shared tags or urls  between her and the user. finally  when the recommended results are topics  the normalized score of a tag is defined as the percentage of people in the seed set who have used that tag  also referred to as tag popularity .
　consequently  depending on the recommendation results  the recommendation system will apply different strategies to different users. moreover  while using friends as the seed set to draw recommendations may matter to some users  e.g.  those who have friends   using people who have interest overlap may matter to others  e.g.  those who tag a lot . due to lack of space  we only briefly describe url recommendation strategies here.
global and global-tag: these two strategies adopt the seed set of all del.icio.us users. the global strategy chooses urls that are globally popular. while these urls usually represent consensus between most users  we experimentally observed  that they only account for a small fraction of any individual user's tagging.
　in global-tag  we model the interests of a user as represented by the vocabulary she uses to tag urls: if a significant portion of the user's tagging actions includes the tags sports and nutrition  the user is likely to be interested in sports-related and nutrition-related urls. this simple observation allows us to refine a single globally popular list and to suggest potentially interesting urls by drawing from one or more tag-specific popular lists in accordance with the user's interests.
url-interest and tag-url-interest: these two strategies adopt social ties to definite an appropriate seed set for the user. the social ties here are implicitly derived based on user's tagging behaviors. in url-interest  these ties are generated based on overall tagging actions  while in tag-url-interest  these ties are generated based on tagging actions within the scope of a few topics that are most relevant to the user.
　collaborative filtering is a popular method in recommender systems that uses statistical techniques  to determine interest overlap between users based on their behavior such as common ratings of movies or common purchasing and browsing patterns. in url-interest  we adopt a similar approach  and construct the common interest network  which links two users if the sets of urls they tagged overlap significantly. however  we observe that using the entire set of urls tagged by a user as a basis for constructing the social ties  while leading to high-quality overlap in interest  only applies to a small subset of the users in our user base .
　one factor which limits the effectiveness of deriving interest overlap between users in collaborative filtering is sparsity: there are often many more items in the system than any one user is able to rate or review. this issue is further aggravated in the context of del.icio.us  where the set of urls corresponds to a potentially infinite set of websites. sparsity is one of the main reasons why using overlap in urls to derive common interest networks is only effective for a subset of del.icio.us users. another important reason is that people rarely agree on everything: you may agree with your mother on cooking  and with your adviser on research  but your adviser's opinion on food is hardly relevant. the tag-url-interest strategy uses this idea to construct social ties that combine tag and url overlaps. such networks have wider applicability than url-only interest networks  and can be used to construct recommendation lists of high quality .
friends: del.icio.us also allows each user to define her friends and family  which can be considered as explicit social ties. the friends strategy directly adopts this explicit social network as the seed set for recommendations. the rest is similar to the previous two strategies.
1 algorithms challenges
　x.qui.site recommendations are computed in three steps. first  different user similarity networks are generated offline based on common user behavior. second  the recommendation strategies which are applicable to a user are executed and their results are computed and merged. third  recommended items  i.e.  urls in this case  are explained. we summarize the challenges behind each step.
1.1 network computation
　unlike social networking sites such as facebook  where users create large friendship networks  explicit connections are much rarer in collaborative tagging sites where the primary function is to help users identify and organize interesting content. therefore  we generate implicit networks. by creating a link between two users who have shared common urls  we are able to generate an implicit similarity network for a larger fraction of users. another mechanism for generating implicit networks include using profile information  e.g.  age and income  about the users. this information is not always available. as a result  url overlap is more effective.
　when the number of users grows  generating an implicit network is non-trivial. as an example  in url-interest  user-user ties are generated based on overlap in tagging actions. if we consider 1k unique users who have tagged at least one url  a naive algorithm  which does a comparison between each pair of users  needs 1 billion comparisons to compute the url-interest networks. at the rate of 1 micro-seconds per comparison  it will take the algorithm 1 days to finish! most of the comparisons are wasted  however  because an average user shares common urls with a number of users far less than the total 1k other users. in other terms  the resulting user-user similarity matrix is often very sparse. based on this observation  we developed an item-based similarity computation algorithm which is based on organizing items based on how many users have tagged/rated them and only does a comparison between two users if that comparison is likely to create a link.
1.1 recommendation generation
　a user who has friends and tags regularly could benefit from more than one recommendation strategy: friends  url-interest and tag-url-interest. the question is then: how to combine recommended lists of items generated by each strategy. we provide a configuration file to specify the weight of each method and use them to combine recommended urls.
1.1 explanation generation
　the explanation of a recommended item di  for a given user du  is defined as the set of contributors who tagged the item.
　a naive approach to computing explanations is to obtain the list of items to recommend to a user du  and then retrieve the set of contributors of each item di  by intersecting di's taggers and du's network. the system then collects the results and assembles all the contributors of a single item into a single list. this post- processing approach is not efficient since it aggregates items twice  once in the recommendation generation  another time in the explanation generation.
　a more efficient approach avoids the double aggregations by maintaining a view where all the tagging actions belonging to the same user are stored together in a single list. specifically  consider generating candidate recommendations for a user du. we retrieve the user lists associated with each user in du's network and apply the no random access algorithm  nra  to compute the candidate recommended items efficiently .
1. demonstration overview
we will demonstrate the following features in x.qui.site:
url recommendation: users can visualize different url recommendations as shown in figure 1. the list is a consolidation of recommendations produced from multiple recommendation strategies applicable to a given user  joshua in an example user . the interface allows users to subset the list of urls to only those derived by a specific recommendation strategy  or those derived from a specific topic or a specific set of friends.
people recommendation: similarly  a user can also be recommended with a list of people that are of potential interest to him. again  the list is combined from different lists that are generated based on different recommendation strategies  including global-expert  which identifies people who are experts  e.g.   frequent tagger  would be a simple example of the definition of expert  on the topics that the target user is interested in; network-expert  which identifies people who share the same interest with the friends of a given user  and various other strategies.

figure 1: url recommendation interfacetopic recommendation: users can also browse the list of recommended topics  i.e.  tags  in a similar way. topic recommendation is generated based on the following strategies: global-top-tags  which identifies the globally popular hot topics; friend-network-top-tags  which identifies the most popular topics among the user's friends; interest-network-toptags  which identifies the most popular topics among the set of people who share the user's urls.
recommendation explanation: the generation of a recommendation is explained along with the recommended result. we show both the basis of the recommendation  i.e.  which urls  topics  or people are used to make the recommendation  as well as the recommendation process  i.e.  which strategy is used .
