this paper describes our approaches to the opinion retrieval and blog distillation tasks for the blog track. for opinion retrieval we employ a two-stage framework consisting of keyword search and opinion classification  where customer reviews collected from amazon.com are used for feature selection. for the blog distillation task we consider all the blog posts belonging to a blog in order to estimate the relevance of the blog at large. to accomplish this  we first identify relevant blogs for a given topic by keyword search and then examine all the posts for each identified blog. in addition  we attempt to detect and discard spam blogs  splogs  and non-english blogs to improve system performance.
1 introduction
in 1  trec introduced a new track  the blog track  which received 1 runs from 1 different research groups world-wide . for the second year of the track  two tasks were tackled; one was the opinion retrieval task-continuing from the first year-and the other was the blog distillation task. we took part in both tasks  except for the polarity sub-task of opinion retrieval. the following reports on our approaches to the two tasks and the results of the official runs and some additional experiments.
1 blog distillation
1 task
the blog distillation task aims at finding key blogs for a
given topic that one would like to add to her rss reader and to read on a regular basis. note that  unlike opinion retrieval  this task is not concerned with whether the blogs are opinionated or not. there are 1 topics created in advance by the participants  and for each topic we return a ranked list of up to 1 blog feeds. the primary metric used for this task is map. more details can be found at the official blog track wiki.1
1 our approach
for this task  we consider all the blog posts belonging to a blog in order to estimate the relevance of the blog at large. to accomplish this  first we search for blogs that are possibly relevant to a given topic using its title as a query. then  after discarding non-english blogs and splogs as described shortly  we search for blog posts belonging to each of the initially retrieved blogs using the same query  topic title . in order to assess the relevance of each blog for the topic  we plot the topical relevance  cosine similarity in this study  of the blog posts for the blog along their posing dates. we regard the area under the line as the overall relevance of the blog. figure 1 illustrates our proposed framework described above.
모the following sections detail some of the key components within the framework.
1.1 non-english blog detection
as the blog track targets only english contents  all non-english blogs can be seen as noise . thus  it is expected that  if one could precisely detect and discard non-english blogs  it would improve system performance. to this end  we employ a character-based n-gram model to distinguish non-english from english blogs.
topic
	for blogsindex	blog search
non-english andsplogdetection
	blog postsindex for	blog postsearch
aggregationrelevance ranked list
figure 1: our proposed framework for blog distillation.
모for this experiment  we built a character-based 1gram model with the simple jeffreys-perks law smoothing  using the reuters-1 corpus consisting of 1 news stories.1 for each permalink file in the blog1 corpus  we extracted its textual contents  represented as a character sequence c1 ...cn  and computed the cross entropy on the 1-gram model as in
h 
1 x
뫘	 		log p ci|ci 1 ci 1   n
i
with a 1nd order markov approximation. the lower the value of h is  the more likely the input character sequence c1 ...cn is english. when h for a given character sequence is greater than a predefined threshold t  we regarded it as non-english. we set t = 1 such that t separates two normal curves  each representing english and non-english contents  with the predicted error rate being 1% for english.
1.1 graphical relevance aggregation
given a set of initially retrieved blogs obtained by  blog search   see figure 1   we estimated the overall relevance of each blog b for a given topic by graphical relevance aggregation described below. we first computed the cosine similarity score si between the topic title q and each post bi 뫍 b as the topical relevance of bi. then  those similarity scores were sorted according to the posting dates of their associated blog posts and were plotted on a graph with the x-axis being the posting dates normalized by the timespan of b. we regarded the area under the line as the overall relevance of the blog for the given topic. the rationale behind is that a good blog frequently talking about a given topic would have posts constantly having high topical relevance with the topic  query   resulting in a large area under the line. for example  figure 1 shows topical relevance along the normalized time-line for five blogs initially retrieved for  nyc restaurants   topic #1 . lastly  the initially retrieved blogs were ranked and output according to a descending order of the area.

posting dates  normalized 
figure 1: example topical relevance plots of five blogs for  nyc restaurants. 
1 results and discussion
we submitted four runs for this task  for which the configurations and results are summarized in table 1. from these results  excluding splogs and non-english contents is seemingly effective for feed search; map improved by 1% compared with the baseline.
모next  to examine the effectiveness of the graphical relevance aggregation described in section 1.1  we simply summed up the cosine similarity scores associated with blog posts for each blog identified by the initial blog search  and ranked the blogs in a descending order of the sums. we did not use splog and nonenglish contents detection for this experiment. the resulting map was 1  indicating the validity of the graphical relevance aggregation.
모an even simpler approach to perform feed search without relevance aggregation would be to output the
table 1: run configurations and their performance in map for feed search.
runtagenglishsplogmapdescriptionkud  .1title-only compulsory run  baseline kuds 뫏.1  +1% exclude splogskudn뫏 .1  +1% exclude non-englishkudsn뫏뫏.1  +1% exclude non-english & splogs1 feeds that are most highly ranked by the initial blog search. we tested this approach with/without splog and non-english contents detection. table 1 shows the results in map and precision at 1  p 1   where all the official runs are included for comparison.
모contrary to our expectation  it turned out that the initial-search-only run without relevance aggregation and splogs/non-english blogs detection  the top row  performed well  obtaining over 1% higher map than our official runs. although we observe some improvement among the highly ranked permalinks as indicated by p 1 for some cases  only run that beaten the initialsearch-only run in map is the one with non-english blog exclusion. in other words  splog detection and relevance aggregation did not improve map in the current settings.
모to investigate the problem  we closely looked at the blog1 corpus and found that many permalink urls were not properly extracted from the corresponding feed files. for example  blog1-feed-1 is associated with no permalinks in 1/feeds-1.gz according to  permalinks  tags  but the feed actually contains several permalinks  such as http://www.machall.com stripid=1. the same problem was found for blog1-feed-1  blog1-feed-1  and many others. another problem is  although less frequent  that the extracted urls are sometimes not permalinks but hyperlinks to the web pages the blog posts are commenting on. for example  see blog1-feed-1  blog1-feed-1  etc. these flaws may be in part harming our approach focusing on individual permalinks' topical relevance.
1 opinion retrieval
1 task
the opinion retrieval task intends to find blog posts which do not simply mention a given topic but explicitly express opinions of the authors or commenters about it. the topic  or target  can be any concrete/abstract object including a person  a product  an event  etc.
모given 1 topics selected from a commercial blog search engine query logs  participants are required to return an ordered list of up to 1 blog posts  documents  for each topic. the evaluation is done through the standard pooling procedure  and system performance is measured primarily by map.
1 our approach
figure 1 depicts our approach to the opinion retrieval task. the following details major components of the approach.
blog1 corpus topic extractioncontent search index opinion & splogdetection
ranked list
figure 1: an overview of our approach to opinion retrieval.
table 1: additional experiments for blog distillation.
runtagenglishsplogrel. agg.mapp 1      뫏  뫏   뫏뫏   뫏 뫏뫏뫏 뫏뫏뫏뫏모before creating an index of the blog1 corpus  we extract textual information from the permalink files. ideally  only the contents and comments of blog posts should be extracted as permalinks contain a variety of information not necessarily related to the posts themselves  such as advertisements. for this purpose  we developed a heuristic algorithm taking advantage of feed files and html tag structure similarly to liao et al. . however  as our preliminary experiments showed that using only the extracted contents and comments actually degraded the system performance  the experiments reported in this paper relied on all the textual information found in permalink files. even though it was not utilized to produce official runs  figure 1 presents  a digest of  the extraction algorithm for completeness.
input: a permalink file
output: post contents and comments  if any 
construct an html tag tree for an input;
for each child node of  body  do
remove tags and their contents which are normally not related to post contents  e.g.   script  and  style  ;
remove tags which do not bear textual contents  e.g.   br  and  hr  ;
모모remove tags with irrelevant id or class values  e.g.  advertisement  and their contents; remove tags with five or more  a  tags as their children; end
locate and extract post contents based on the post title and snippet obtained from the corresponding rss; locate and extract comments based on a  form  tag;figure 1: an algorithm of contents and comment extraction from permalink files.  not used for official runs. 
모for indexing and retrieval  we used an open source ir system  apache lucene 1 equipped with the vector space model  and the tf-idf term weighting scheme . stopwords were removed and all terms were lower-cased in indexing. no stemmer was applied.
모given a topic  we utilized  title  fields only as a query. in this initial retrieval phase  we limited the number of retrieved documents  permalinks  to the top 1. then  opinion and splog classifiers were independently applied to those 1 documents  where support vector machines  svms   and k-nearest neighbors  knn  were experimentally tested. instead of discarding blogs marked as  splog  or  non-opinion   we integrated classification results  confidence for prediction  with the retrieval results  cosine similarity  in the form of their product.
모as the training data set for learning the opinion classifier  we used the qrels from the 1 blog track where 1 and 1 documents are manually labeled as opinions  labels 1  and non-opinions  label 1   respectively. note  however  that we explored to use 1 positive/negative customer reviews harvested from amazon.com in order to find good sentiment terms as features.
모for splog classification  1 splogs randomly selected from splogspot1 were used as positive instances. on the other hand  since we do not have a good set of non-splogs  we regarded the relevant permalinks- whether opinionated or non-opinionated-from the blog track 1 qrels as non-splogs  considering the fact that permalinks judged as relevant are typically non-splogs. to be precise  only 1% of relevant permalinks are reported to be splogs .
모as with the case of the opinion classifier  individual terms-which lin et al.  reported to be quite effective-were used as features for splog classification. additionally  we used two features based on hyperlink information. one was the variance of outlink url frequencies within a permalink  which intended to capture the characteristic that splogs tend to have a number of links pointing to the same url. the other link-based feature was the variance of the number of
table 1: run configurations and their performance in map for opinion retrieval.
runtagopinionsplogmapdescriptionku  .1title-only compulsory run  baseline kuknnknn .1  -1% use knn for opinion classificationkusvmsvm .1  -1% use svm for opinion classificationkus svm.1  -1% use svm for splog classificationkusvmssvmsvm.1  -1% use svm for opinion and splog classificationunique anchor texts pointing to the same url  which represented our observation that splogs often use different anchor texts to link to the same website.
1 results
we submitted five runs for the opinion retrieval task. the configurations of those runs and their performance in map for opinion retrieval  not mere topical relevance  are presented in table 1.
모in brief  our attempts to separate opinions from nonopinions and to separate splogs from non-splogs all failed. we are currently inspecting the results to identify what has caused the problems.
1 concluding remarks
this year  we participated in the blog track and tackled the blog distillation and opinion retrieval tasks. unfortunately  the empirical results indicate only limited success with respect to our attempts to exclude noise  i.e.  splogs and non-english contents  from the system output and to estimate the overall blog relevance. we are currently analyzing the results and are examining our approaches for improvement.
